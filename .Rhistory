with(cor(d, b))
# Refined Model
sliders <- sliders %>%
mutate(fb_prev = ifelse(prev_pitch == "Fastball", 1, 0)) %>%
mutate(count_s = case_when(count  %in% c("0_0", "1_1", "2_2") ~ "Even",
count  %in%  c("1_0", "2_1", "2_0", "3_0", "3_1") ~ "Hitter",
count %in%  c("0_1", "0_2", "1_2") ~ "Pitcher",
count == "3_2" ~ "Full"))
sl_model_strike <- glm(STRIKE ~ pfx_x + pfx_z + plate_x + plate_z + zone +
count_s + pfx_total + break_change + distance + prev_pitch +
speed_fb_diff + release_spin_rate +
I(plate_x^2) + I(plate_z^2),
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_strike)
sl_strike <- augment(sl_model_strike)
sl_strike <- sl_strike %>%
mutate(prediction_log = predict(sl_model_strike, sl_strike),
prediction = 1 / (1 + exp(-prediction_log)),
rounded_pred = case_when(
prediction >= 0.5 ~ 1,
prediction < 0.5 ~ 0
)) %>%
filter(!is.na(prediction)) %>%
mutate(Response = "strike",
pitch = "slider")
# Refined Model
fb_model_strike <- glm(STRIKE ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
count + pfx_total + break_change + distance +
release_spin_rate + I(plate_x^2) + I(plate_z^2),
data = fastballs, family = binomial)
# Model Evaluation
summary(fb_model_strike)
fb_strike <- augment(fb_model_strike)
fb_strike <- fb_strike %>%
mutate(prediction_log = predict(fb_model_strike, fb_strike),
prediction = 1 / (1 + exp(-prediction_log)),
rounded_pred = case_when(
prediction >= 0.5 ~ 1,
prediction < 0.5 ~ 0
)) %>%
filter(!is.na(prediction)) %>%
mutate(Response = "strike",
pitch = "fastball")
## Intercept-Only Models
# Slider
sl_model_whiff_int <- glm(whiff ~ 1,
data = sliders, family = binomial)
sl_whiff_int <- augment(sl_model_whiff_int)
sl_whiff_int <- sl_whiff_int %>%
mutate(prediction_log = predict(sl_model_whiff_int, sl_whiff_int),
prediction = 1 / (1 + exp(-prediction_log)),
rounded_pred = case_when(
prediction >= 0.5 ~ 1,
prediction < 0.5 ~ 0
)) %>%
filter(!is.na(prediction)) %>%
mutate(Response = "whiff",
pitch = "slider",
type = "intercept only")
# Fastball
fb_model_whiff_int <- glm(whiff ~ 1,
data = fastballs, family = binomial)
fb_whiff_int <- augment(fb_model_whiff_int)
fb_whiff_int <- fb_whiff_int %>%
mutate(prediction_log = predict(fb_model_whiff_int, fb_whiff_int),
prediction = 1 / (1 + exp(-prediction_log)),
rounded_pred = case_when(
prediction >= 0.5 ~ 1,
prediction < 0.5 ~ 0
)) %>%
filter(!is.na(prediction)) %>%
mutate(Response = "whiff",
pitch = "fastball",
type = "intercept only")
## Zone-Only Models
# Slider
sl_model_whiff_zone <- glm(whiff ~ zone,
data = sliders, family = binomial)
sl_whiff_zone <- augment(sl_model_whiff_zone)
sl_whiff_zone <- sl_whiff_zone %>%
mutate(prediction_log = predict(sl_model_whiff_zone, sl_whiff_zone),
prediction = 1 / (1 + exp(-prediction_log)),
rounded_pred = case_when(
prediction >= 0.5 ~ 1,
prediction < 0.5 ~ 0
)) %>%
filter(!is.na(prediction)) %>%
mutate(Response = "whiff",
pitch = "slider",
type = "zone only")
# Fastball
fb_model_whiff_zone <- glm(whiff ~ zone,
data = fastballs, family = binomial)
fb_whiff_zone <- augment(fb_model_whiff_zone)
fb_whiff_zone <- fb_whiff_zone %>%
mutate(prediction_log = predict(fb_model_whiff_zone, fb_whiff_zone),
prediction = 1 / (1 + exp(-prediction_log)),
rounded_pred = case_when(
prediction >= 0.5 ~ 1,
prediction < 0.5 ~ 0
)) %>%
filter(!is.na(prediction)) %>%
mutate(Response = "whiff",
pitch = "fastball",
type = "zone only")
all_models_data$type <- all_models_data$type %>%
replace_na("complex")
all_models_data <- bind_rows(
sl_whiff, fb_whiff,
sl_barrel, fb_barrel,
sl_strike, fb_strike,
sl_whiff_int, fb_whiff_int,
sl_whiff_zone, fb_whiff_zone) %>%
select(Response:pitch, type, whiff:pred_bwhiff, `I(plate_x^2)`:count, `.fitted`:rounded_pred)
all_models <- bind_rows(
tidy(sl_model_whiff) %>% mutate(Response = "whiff", pitch = "slider", type = "complex"),
tidy(fb_model_whiff) %>% mutate(Response = "whiff", pitch = "fastball", type = "complex"),
tidy(sl_model_barrel) %>% mutate(Response = "barrel", pitch = "slider", type = "complex"),
tidy(fb_model_barrel) %>% mutate(Response = "barrel", pitch = "fastball", type = "complex"),
tidy(sl_model_strike) %>% mutate(Response = "strike", pitch = "slider", type = "complex"),
tidy(fb_model_strike) %>% mutate(Response = "strike", pitch = "fastball", type = "complex"),
tidy(sl_model_whiff_int) %>% mutate(Response = "whiff", pitch = "slider",
type = "intercept only"),
tidy(fb_model_whiff_int) %>% mutate(Response = "whiff", pitch = "fastball",
type = "intercept only"),
tidy(sl_model_whiff_zone) %>% mutate(Response = "whiff", pitch = "slider",
type = "zone only"),
tidy(fb_model_whiff_zone) %>% mutate(Response = "whiff", pitch = "fastball",
type = "zone only")
)
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.05),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.05),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.01),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.01),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.01),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.0001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.000001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.00000000001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.0000000000000001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.0000000000000000001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.00000000000000000001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.05),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
summary(all_models$estimate)
all_models %>%
filter(type == "complex") %>%
filter(estimate > 50) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
filter(estimate < 50) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
library(Brewer)
library(RColorBrewer)
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
scale_fill_brewer(type = "div") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-15, 50)) +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-15, 15)) +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-10, 10)) +
theme_classic() +
NULL
# P-Value
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = p.value, y = term, fill = estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.05),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
# P-Value
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = p.value, y = term, fill = estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.05),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
# P-Value
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.05),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
# Estimate
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-10, 10)) +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-10, 10)) +
theme_classic() +
NULL
# Estimate
all_models %>%
filter(type == "complex") %>%
mutate(log_estimate = log(abs(estimate))*(estimate/abs(estimate))) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = log_estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-10, 10)) +
theme_classic() +
NULL
# Estimate
all_models %>%
filter(type == "complex") %>%
mutate(log_estimate = log(abs(estimate))*(estimate/abs(estimate))) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = log_estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0) +
theme_classic() +
NULL
# Estimate
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-10, 10)) +
theme_classic() +
NULL
# Log Estimate
all_models %>%
filter(type == "complex") %>%
mutate(log_estimate = log(abs(estimate))*(estimate/abs(estimate))) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = log_estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0) +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(log_estimate = log(abs(estimate))*(estimate/abs(estimate))) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = log_estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0) +
theme_classic() +
NULL
