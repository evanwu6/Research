facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.01),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.01),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.0001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.000001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.00000000001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.0000000000000001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.0000000000000000001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.00000000000000000001),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.05),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
summary(all_models$estimate)
all_models %>%
filter(type == "complex") %>%
filter(estimate > 50) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
filter(estimate < 50) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
library(Brewer)
library(RColorBrewer)
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
scale_fill_brewer(type = "div") +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-15, 50)) +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-15, 15)) +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
# scale_color_gradient(values = c(0, 0.05)) +
geom_tile() +
facet_wrap(~ pitch) +
# scale_fill_gradient(limits = c(0, 0.05),
#                     low = "green", high = "yellow", na.value = "lightgray") +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-10, 10)) +
theme_classic() +
NULL
# P-Value
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = p.value, y = term, fill = estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.05),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
# P-Value
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = p.value, y = term, fill = estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.05),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
# P-Value
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = p.value)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_gradient(limits = c(0, 0.05),
low = "green", high = "yellow", na.value = "lightgray") +
theme_classic() +
NULL
# Estimate
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-10, 10)) +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-10, 10)) +
theme_classic() +
NULL
# Estimate
all_models %>%
filter(type == "complex") %>%
mutate(log_estimate = log(abs(estimate))*(estimate/abs(estimate))) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = log_estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-10, 10)) +
theme_classic() +
NULL
# Estimate
all_models %>%
filter(type == "complex") %>%
mutate(log_estimate = log(abs(estimate))*(estimate/abs(estimate))) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = log_estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0) +
theme_classic() +
NULL
# Estimate
all_models %>%
filter(type == "complex") %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0,
limits = c(-10, 10)) +
theme_classic() +
NULL
# Log Estimate
all_models %>%
filter(type == "complex") %>%
mutate(log_estimate = log(abs(estimate))*(estimate/abs(estimate))) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = log_estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0) +
theme_classic() +
NULL
all_models %>%
filter(type == "complex") %>%
mutate(log_estimate = log(abs(estimate))*(estimate/abs(estimate))) %>%
mutate(model_id = paste0(Response, pitch, type)) %>%
group_by(model_id) %>%
ggplot(aes(x = Response, y = term, fill = log_estimate)) +
geom_tile() +
facet_wrap(~ pitch) +
scale_fill_brewer(type = "div") +
scale_fill_gradient2(low = "red", high = "green", mid = "white", midpoint = 0) +
theme_classic() +
NULL
setwd("~/Downloads/Research/Research")
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1)
library(tidyverse)
library(tidyverse)
library(knitr)
library(glmnet)
library(patchwork)
library(knitr)
library(glmnet)
library(patchwork)
library(olsrr)
library(broom)
library(broom)
options(scipen = 999)
library(knitr)
library(glmnet)
library(patchwork)
library(olsrr)
library(broom)
options(scipen = 999)
library(RColorBrewer)
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1)
lhp <- read_csv("CSVs/lhp_pitches.csv") %>%
select(-...1)
data <- rbind(rhp, lhp)
View(data)
data %>%
group_by(p_throws, hitter, pitch_type) %>% View
data %>%
mutate(pitch_speed = round(pitch_speed, 0)) %>%
group_by(p_throws, hitter, pitch_type) %>%
summarize(min_x = min(pfx_x), max_x = max(pfx_x),
min_z = min(pfx_z), max_z = max(pfx_z)) %>% View
data %>%
mutate(pitch_speed = round(pitch_speed, 0)) %>%
group_by(p_throws, hitter, pitch_type) %>%
summarize(min_x = min(pfx_x, na.rm = FALSE), max_x = max(pfx_x, na.rm = FALSE),
min_z = min(pfx_z, na.rm = FALSE), max_z = max(pfx_z, na.rm = FALSE)) %>% View
data %>%
mutate(pitch_speed = round(pitch_speed, 0)) %>%
group_by(p_throws, hitter, pitch_type) %>%
filter(!is.na(pfx_x)) %>%
filter(!is.na(pfx_z)) %>%
summarize(min_x = min(pfx_x, na.rm = FALSE), max_x = max(pfx_x, na.rm = FALSE),
min_z = min(pfx_z, na.rm = FALSE), max_z = max(pfx_z, na.rm = FALSE)) %>% View
min_z = min(pfx_z), max_z = max(pfx_z)) %>% View
data %>%
mutate(pitch_speed = round(pitch_speed, 0)) %>%
group_by(p_throws, hitter, pitch_type) %>%
filter(!is.na(pfx_x)) %>%
filter(!is.na(pfx_z)) %>%
summarize(min_x = min(pfx_x), max_x = max(pfx_x),
min_z = min(pfx_z), max_z = max(pfx_z)) %>% View
data %>%
mutate(pitch_speed = round(pitch_speed, 0)) %>%
group_by(p_throws, hitter, pitch_type, pitch_speed) %>%
filter(!is.na(pfx_x)) %>%
filter(!is.na(pfx_z)) %>%
summarize(min_x = min(pfx_x), max_x = max(pfx_x),
min_z = min(pfx_z), max_z = max(pfx_z)) %>% View
data %>%
mutate(pitch_speed = round(pitch_speed, 0)) %>%
group_by(p_throws, hitter, pitch_type, pitch_speed) %>%
filter(!is.na(pfx_x)) %>%
filter(!is.na(pfx_z)) %>%
summarize(min_x = min(pfx_x), max_x = max(pfx_x),
min_z = min(pfx_z), max_z = max(pfx_z)) %>%
write.csv("Movement.csv")
# Data ####
movement <- read_csv("Movement.csv")
View(movement)
movement$pitch_type %>% unique
shiny::runApp()
?selectInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
pitch_lims <- movement %>%
filter(pitch_type == input$pitch,
pitch_speed == input$speed,
p_throws == input$p_hand,
hitter == input$b_hand)
runApp()
runApp()
pitch_lims <- movement %>%
filter(pitch_type == input$pitch,
pitch_speed == input$speed,
p_throws == input$p_hand,
hitter == input$b_hand)
runApp()
runApp()
View(movement)
View(movement)
View(movement)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(movement)
# Data ####
movement <- read_csv("Movement.csv") %>%
mutate(min_x = min_x*12,
max_x = max_x*12,
min_z = min_z*12,
max_z = max_z*12)
View(movement)
runApp()
movement[1,1]
movement[1,2]
View(data)
View(movement)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Downloads/Research/Research")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
2.45/12
2.45/17
runApp()
# Data ####
movement <- read_csv("Movement.csv") %>%
mutate(min_x = min_x*12,
max_x = max_x*12,
min_z = min_z*12,
max_z = max_z*12)
ggplot(movement) %>% geom_point(aes(x = min_x, y = max_x))
ggplot(movement) + geom_point(aes(x = min_x, y = max_x))
View(movement)
ggplot(filter(movement, pitch_type == "FF")) + geom_point(aes(x = pitch_speed, y = max_x), color = "green") + geom_point(aes(x = pitch_speed, y = min_x), color = "red")
ggplot(filter(movement, pitch_type == "FF", p_throws == "R")) + geom_point(aes(x = pitch_speed, y = max_x), color = "green") + geom_point(aes(x = pitch_speed, y = min_x), color = "red")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
runApp('app test.R')
