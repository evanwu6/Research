summarize(n = n(), barrel_rate = mean(Barrel)) %>%
as.data.frame() %>%
ggplot(aes(x = prediction, y = barrel_rate)) +
geom_point(aes(size = n)) + # size of bin shown on graph
coord_fixed() +
geom_smooth(se = FALSE) +
labs(y = "observed barrel rate",
x = "projected barrel rate",
title = "Sliders Barrel Model Prediction",
subtitle = "Barrel rate by predicted whiff value",
caption = "Barrel rate have a 1% bin width")
sl_preds_barrel %>%
mutate(prediction = round(prediction, 2)) %>%
group_by(prediction) %>%
summarize(n = n(), barrel_rate = mean(Barrel)) %>%
as.data.frame() %>%
ggplot(aes(x = prediction, y = barrel_rate)) +
geom_point(aes(size = n)) + # size of bin shown on graph
coord_fixed() +
geom_smooth(se = FALSE) +
labs(y = "observed barrel rate",
x = "projected barrel rate",
title = "Sliders Barrel Model Prediction",
subtitle = "Barrel rate by predicted whiff value",
caption = "Barrel rate have a 1% bin width")
setwd("~/Downloads/Research/Research")
library(tidyverse)
library(knitr)
library(glmnet)
library(patchwork)
library(olsrr)
# Geom Zone (Jackie's) ####
geom_zone <- function(top = 11/3, bottom = 3/2, linecolor = "black"){
geom_rect(xmin = -.7083, xmax = .7083, ymin = bottom, ymax = top,
alpha = 0, color = linecolor, linewidth = 0.75)
}
# c(0, 0, -.25, -.5, -.25))
geom_plate <- function(pov = "pitcher"){
df <- case_when(
pov == "pitcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, .25, .5, .25)),
pov == "catcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, -.25, -.5, -.25))
)
g <- geom_polygon(data = df, aes(x = x, y = y), fill = "white", color = "black", linewidth = 1.25)
g
}
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1) %>%
filter(!is.na(pfx_z)) %>%
mutate(distance_sweet = sqrt(((plate_x - 0.85)^2)+((plate_z - 1.55)^2))) %>%
mutate(zone = case_when(distance < 2 ~ zone,
distance >= 2 & plate_z > (sz_top + sz_bot)/2 ~ 16,
distance >= 2 & plate_z <= (sz_top + sz_bot)/2 ~ 17)) %>%
mutate(ab_id = paste0(game_date, "_", player_id, "_", at_bat_number),
prev_ab_id = lead(ab_id, 1)) %>%
mutate(prev_pitch = ifelse(ab_id == prev_ab_id, lead(pitch_type, 1), NA)) %>%
select(-ab_id, -prev_ab_id) %>%
mutate(prev_pitch = case_when(prev_pitch  %in% c("FF", "FC", "SI") ~ "Fastball",
prev_pitch %in% c("SL", "CU", "KC",
"SV", "ST", "CS") ~ "Breaking Ball",
prev_pitch  %in% c("CH", "FS") ~ "Off Speed")) %>%
mutate(zone = relevel(as.factor(zone), ref = 5))
# New Code for Barrels
# Upper Limit
m <- (50 - 30) / (116 - 98)
b <- 30 - m * 98
paste0("y = ", round(m, 2), "x ", round(b, 2))
# Lower Limit
m <- (8 - 26) / (116 - 98)
b <- 26 - m * 98
paste0("y = ", round(m, 2), "x + ", round(b, 2))
# Making Limits
rhp <- rhp %>%
mutate(barrel_upper_lim = case_when(
launch_speed <= 98 ~ 30,
launch_speed > 98 & launch_speed < 116 ~ (1.11)*launch_speed - 78.89,
launch_speed >= 116 ~ 50),
barrel_lower_lim = case_when(
launch_speed <= 98 ~ 26,
launch_speed > 98 & launch_speed < 116 ~ (-1)*launch_speed + 124,
launch_speed >= 116 ~ 8)
)
# Barrel
rhp <- rhp %>%
mutate(Barrel = launch_angle <= barrel_upper_lim &
launch_angle >= barrel_lower_lim &
launch_speed >= 98)
# Strike
rhp <- rhp %>%
mutate(STRIKE = ifelse(description  %in% c("called_strike", "swinging_strike",
"foul_tip", "bunt_foul_tip", "foul_bunt",
"swinging_strike_blocked", "missed_bunt"),
1, 0))
# Batter Whiff
batter_stats <- rhp %>%
group_by(batter,
pitch_type) %>%
summarize(rate = mean(whiff),
pitches = n()) %>%
mutate(pred_bwhiff = (pitches / 300)*rate + ((300-pitches)/300)*0.1561567) %>%
mutate(pred_bwhiff = ifelse(pitches >= 300, rate, pred_bwhiff))
# Merging Whiff Prediction with RHP
rhp <- rhp %>%
left_join(select(batter_stats, -rate, -pitches),
by = c("batter" = "batter", "pitch_type" = "pitch_type"))
rhp <- rhp %>%
mutate(prev_pitch = ifelse(is.na(prev_pitch), "None", prev_pitch)) %>%
mutate(Count = paste0(balls, "-", strikes)) %>%
mutate(Count = as.factor(Count))
sliders <- rhp %>%
filter(hitter == "R") %>%
filter(pitch_type == "SL") %>%
mutate(count = paste0(balls, "_", strikes),
prev_pitch = as.factor(prev_pitch)) %>%
mutate(prev_pitch_ff = ifelse(prev_pitch == "FF", 1, 0))
fastballs <- rhp %>%
filter(hitter == "R") %>%
filter(pitch_type == fb_type) %>%
mutate(count = paste0(balls, "_", strikes),
prev_pitch = as.factor(prev_pitch))
# Initial Model
sl_model_barrel_all <- glm(Barrel ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
count + pfx_total + speed_change + break_change + distance + prev_pitch +
speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff + release_spin_rate +
I(plate_x^2) + I(plate_z^2) + pred_bwhiff,
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_barrel_all)
# Refined Model
sl_model_barrel <- glm(Barrel ~ pitch_speed + plate_x + plate_z +
distance + I(plate_z^2),
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_barrel)
# Model Predictions
sl_preds_barrel <- sliders %>%
mutate(prediction_log = predict(sl_model_barrel, sliders),
prediction = 1 / (1 + exp(-prediction_log)),
rounded_pred = case_when(
prediction >= 0.5 ~ 1,
prediction < 0.5 ~ 0
)) %>%
filter(!is.na(prediction))
ggplot(sl_preds_barrel, aes(x = prediction, y = as.numeric(Barrel))) +
geom_point(alpha = 0.01) +
geom_smooth() +
geom_smooth(method = "lm") +
geom_abline(slope = 1, intercept = 0, color = "red") +
theme_bw()
# Initial Model
fb_model_barrel_all <- glm(Barrel ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
count + pfx_total + speed_change + break_change + distance + prev_pitch +
release_spin_rate +
I(plate_x^2) + I(plate_z^2) + pred_bwhiff,
data = fastballs, family = binomial)
# Model Evaluation
summary(fb_model_barrel_all)
# Refined Model
fb_model_barrel <- glm(Barrel ~ pitch_speed + pfx_z + plate_z +
speed_change + break_change + distance +
release_spin_rate + I(plate_z^2),
data = fastballs, family = binomial)
# Model Evaluation
summary(fb_model_barrel)
# Model Predictions
fb_preds_barrel <- fastballs %>%
mutate(prediction_log = predict(fb_model_barrel, fastballs),
prediction = 1 / (1 + exp(-prediction_log)),
rounded_pred = case_when(
prediction >= 0.5 ~ 1,
prediction < 0.5 ~ 0
)) %>%
filter(!is.na(prediction))
ggplot(fb_preds_barrel, aes(x = prediction, y = as.numeric(Barrel))) +
geom_point(alpha = 0.01) +
geom_smooth() +
geom_smooth(method = "lm") +
geom_abline(slope = 1, intercept = 0, color = "red") +
theme_bw()
# Initial Model
sl_model_strike_all <- glm(STRIKE ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
count + pfx_total + speed_change + break_change + distance + prev_pitch +
speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff + release_spin_rate +
I(plate_x^2) + I(plate_z^2) + pred_bwhiff,
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_strike_all)
# Refined Model
sliders <- sliders %>%
mutate(fb_prev = ifelse(prev_pitch == "Fastball", 1, 0)) %>%
mutate(count_s = case_when(count  %in% c("0_0", "1_1", "2_2") ~ "Even",
count  %in%  c("1_0", "2_1", "2_0", "3_0", "3_1") ~ "Hitter",
count %in%  c("0_1", "0_2", "1_2") ~ "Pitcher",
count == "3_2" ~ "Full"))
sl_model_strike <- glm(STRIKE ~ plate_x + plate_z +
count_s + pfx_total + distance +
speed_fb_diff + pfx_z_fb_diff + release_spin_rate +
I(plate_x^2) + I(plate_z^2) + pred_bwhiff, fb_prev,
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_strike)
# Model Predictions
sl_preds_strike <- sliders %>%
mutate(prediction_log = predict(sl_model_strike, sliders),
prediction = 1 / (1 + exp(-prediction_log)),
rounded_pred = case_when(
prediction >= 0.5 ~ 1,
prediction < 0.5 ~ 0
)) %>%
filter(!is.na(prediction))
ggplot(sl_preds_barrel, aes(x = prediction, y = as.numeric(STRIKE))) +
geom_point(alpha = 0.01) +
geom_smooth() +
geom_smooth(method = "lm") +
geom_abline(slope = 1, intercept = 0, color = "red") +
theme_bw()
# Initial Model
fb_model_strike_all <- glm(STRIKE ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
count + pfx_total + speed_change + break_change + distance + prev_pitch +
release_spin_rate + I(plate_x^2) + I(plate_z^2) + pred_bwhiff,
data = fastballs, family = binomial)
# Model Evaluation
summary(fb_model_strike_all)
# Refined Model
fb_model_strike <- glm(STRIKE ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z +
pfx_total + speed_change + break_change + distance + prev_pitch +
release_spin_rate + I(plate_x^2) + I(plate_z^2) + pred_bwhiff,
data = fastballs, family = binomial)
# Model Evaluation
summary(fb_model_strike)
# Model Predictions
fb_preds_strike <- fastballs %>%
mutate(prediction_log = predict(fb_model_strike, fastballs),
prediction = 1 / (1 + exp(-prediction_log)),
rounded_pred = case_when(
prediction >= 0.5 ~ 1,
prediction < 0.5 ~ 0
)) %>%
filter(!is.na(prediction))
# fb_preds_strike %>%
#   mutate(prediction = round(prediction, 2)) %>%
#   group_by(prediction) %>%
#   summarize(n = n(), STRIKE_rate = mean(STRIKE)) %>%
#   as.data.frame() %>%
#   ggplot(aes(x = prediction, y = STRIKE_rate)) +
#   geom_point(aes(size = n)) + # size of bin shown on graph
#   coord_fixed() +
#   geom_smooth(se = FALSE) +
#   labs(y = "observed strike rate",
#        x = "projected strike rate",
#        title = "Fastball Strike Model Prediction",
#        subtitle = "Strike rate by predicted strike rate",
#        caption = "Strike rate have a 1% bin width")
ggplot(sl_preds_barrel, aes(x = prediction, y = as.numeric(STRIKE))) +
geom_point(alpha = 0.01) +
geom_smooth() +
geom_smooth(method = "lm") +
geom_abline(slope = 1, intercept = 0, color = "red") +
theme_bw()
sl_preds_barrel %>%
filter(is.na(filter)) %>% View
sl_preds_barrel %>%
filter(is.na(prediction)) %>% View
sl_preds_barrel %>%
filter(is.na(predictions)) %>% View
sl_preds_barrel %>%
filter(is.na(prediction)) %>% View
sl_preds_barrel %>%
filter(is.na(Barrel)) %>% View
is.barrel <- function(LA, EV){
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98)
if(is.na(outcome)){outcome <- FALSE}
outcome
}
is.barrel(40, 120)
is.barrel(NA, 120)
is.barrel(20, 120)
is.barrel(2, 120)
is.barrel(2, NA)
is.barrel(1, 130)
# Barrel Function
is.barrel <- function(LA, EV){
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98)
if(is.na(outcome)){outcome <- FALSE}
if(LA > 50 | LA < 8){outcome <- FALSE}
outcome
}
is.barrel(1, 130)
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
# Barrel Function
is.barrel <- function(LA, EV){
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
if(is.na(outcome)){outcome <- FALSE}
outcome
}
is.barrel(1, 130)
# Barrel
rhp <- rhp %>%
mutate(Barrel = is.barrel(LA = launch_angle, EV = launch_speed))
library(tidyverse)
library(knitr)
library(glmnet)
library(patchwork)
library(olsrr)
library(tidyverse)
library(knitr)
library(glmnet)
library(patchwork)
library(olsrr)
geom_zone <- function(top = 11/3, bottom = 3/2, linecolor = "black"){
geom_rect(xmin = -.7083, xmax = .7083, ymin = bottom, ymax = top,
alpha = 0, color = linecolor, linewidth = 0.75)
}
geom_plate <- function(pov = "pitcher"){
df <- case_when(
pov == "pitcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, .25, .5, .25)),
pov == "catcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, -.25, -.5, -.25))
)
g <- geom_polygon(data = df, aes(x = x, y = y), fill = "white", color = "black", linewidth = 1.25)
g
}
# Barrel Function
is.barrel <- function(LA, EV){
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
if(is.na(outcome)){outcome <- FALSE}
outcome
}
setwd("~/Downloads/Research/Research")
is.barrel(1, 130)
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1) %>%
filter(!is.na(pfx_z)) %>%
mutate(distance_sweet = sqrt(((plate_x - 0.85)^2)+((plate_z - 1.55)^2))) %>%
mutate(zone = case_when(distance < 2 ~ zone,
distance >= 2 & plate_z > (sz_top + sz_bot)/2 ~ 16,
distance >= 2 & plate_z <= (sz_top + sz_bot)/2 ~ 17)) %>%
mutate(ab_id = paste0(game_date, "_", player_id, "_", at_bat_number),
prev_ab_id = lead(ab_id, 1)) %>%
mutate(prev_pitch = ifelse(ab_id == prev_ab_id, lead(pitch_type, 1), NA)) %>%
select(-ab_id, -prev_ab_id) %>%
mutate(prev_pitch = case_when(prev_pitch  %in% c("FF", "FC", "SI") ~ "Fastball",
prev_pitch %in% c("SL", "CU", "KC",
"SV", "ST", "CS") ~ "Breaking Ball",
prev_pitch  %in% c("CH", "FS") ~ "Off Speed")) %>%
mutate(zone = relevel(as.factor(zone), ref = 5))
# Barrel
rhp <- rhp %>%
mutate(Barrel = is.barrel(LA = launch_angle, EV = launch_speed))
test <- head(rhp, n = 20)
test %>% mutate(barrel = is.barrel(LA = launch_angle, EV = launch_speed))
View(test)
test %>% select(launch_angle, launch_speed) %>% View
# Barrel Function
is.barrel <- function(LA, EV){
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
# if(is.na(outcome)){outcome <- FALSE}
outcome
}
test %>% mutate(barrel = is.barrel(LA = launch_angle, EV = launch_speed))
test %>% mutate(barrel = is.barrel(LA = launch_angle, EV = launch_speed)) %>% select(launch_angle, launch_speed, barrel) %>% View
rhp %>%
filter(is.na(launch_angle) & !is.na(launch_speed)) %>% View
# Barrel Function
is.barrel <- function(LA, EV){
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
if(is.na(LA) | is.nsa(EV)){outcome <- FALSE}
outcome
}
if(is.na(LA) | is.na(EV)){outcome <- FALSE}
# Barrel Function
is.barrel <- function(LA, EV){
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
if(is.na(LA) | is.na(EV)){outcome <- FALSE}
outcome
}
test %>% mutate(barrel = is.barrel(LA = launch_angle, EV = launch_speed)) %>% select(launch_angle, launch_speed, barrel) %>% View
test %>%
mutate(barrel = is.barrel(LA = launch_angle, EV = launch_speed)) %>%
select(launch_angle, launch_speed, barrel)
# Barrel Function
is.barrel <- function(LA, EV){
if(is.na(LA)) { LA <- 0}
if(is.na(EV)) { EV <- 0}
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
# if(is.na(LA) | is.na(EV)){outcome <- FALSE}
outcome
}
test %>%
mutate(barrel = is.barrel(LA = launch_angle, EV = launch_speed)) %>%
select(launch_angle, launch_speed, barrel)
# Barrel Function
is.barrel <- function(LA, EV){
LA <- LA
EV <- EV
if(is.na(LA)) { LA <- 0}
if(is.na(EV)) { EV <- 0}
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
# if(is.na(LA) | is.na(EV)){outcome <- FALSE}
outcome
}
test %>%
mutate(barrel = is.barrel(LA = launch_angle, EV = launch_speed)) %>%
select(launch_angle, launch_speed, barrel)
# Barrel Function
is.barrel <- function(LA, EV){
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
ifelse(is.na(outcome), FALSE, outcome)
}
test %>%
mutate(barrel = is.barrel(LA = launch_angle, EV = launch_speed)) %>%
select(launch_angle, launch_speed, barrel)
# Barrel
rhp <- rhp %>%
mutate(Barrel = is.barrel(LA = launch_angle, EV = launch_speed))
View(rhp)
# Barrel Function
is.barrel <- function(LA, EV){
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
ifelse(outcome = NA, FALSE, outcome)
}
test %>%
mutate(barrel = is.barrel(LA = launch_angle, EV = launch_speed)) %>%
select(launch_angle, launch_speed, barrel)
# Barrel Function
is.barrel <- function(LA, EV){
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
outcome <- replace_na(outcome, FALSE)
outcome
}
test %>%
mutate(barrel = is.barrel(LA = launch_angle, EV = launch_speed)) %>%
select(launch_angle, launch_speed, barrel)
# Barrel
rhp <- rhp %>%
mutate(Barrel = is.barrel(LA = launch_angle, EV = launch_speed))
test %>% mutate(barrel = is.barrel(LA = launch_angle, EV = launch_speed)) %>% select(launch_angle, launch_speed, barrel) %>% View
rhp %>% group_by(Barrel) %>% summarize(n())
207717+3026
View(batter_stats)
batter_stats <- rhp %>%
summarize(rate = mean(whiff),
pitches = n(),
.by = c(batter, pitch_type)) %>%
mutate(pred_bwhiff = (pitches / 300)*rate + ((300-pitches)/300)*0.1561567) %>%
mutate(pred_bwhiff = ifelse(pitches >= 300, rate, pred_bwhiff))
View(batter_stats)
rhp %>%
summarize(rate = mean(whiff),
pitches = n(),
.by = c(batter, pitch_type)) %>%
mutate(pitch_whiff = mean(whiff),
.by = pitch_type) %>%
mutate(pred_bwhiff = (pitches / 300)*rate + ((300-pitches)/300)*0.1561567) %>%
mutate(pred_bwhiff = ifelse(pitches >= 300, rate, pred_bwhiff)) %>% View
View(batter_stats)
?weighted.mean
rhp %>%
summarize(rate = mean(whiff),
pitches = n(),
.by = c(batter, pitch_type)) %>%
mutate(pitch_whiff = weighted.mean(rate, pitches),
.by = pitch_type) %>%
mutate(pred_bwhiff = (pitches / 300)*rate + ((300-pitches)/300)*0.1561567) %>%
mutate(pred_bwhiff = ifelse(pitches >= 300, rate, pred_bwhiff)) %>% View
# Batter Whiff
batter_stats <- rhp %>%
summarize(rate = mean(whiff),
pitches = n(),
.by = c(batter, pitch_type)) %>%
mutate(pitch_whiff = weighted.mean(rate, pitches),
.by = pitch_type) %>%
mutate(pred_bwhiff = (pitches / 300)*rate + ((300-pitches)/300)*pitch_whiff) %>%
mutate(pred_bwhiff = ifelse(pitches >= 300, rate, pred_bwhiff))
View(batter_stats)
# Merging Whiff Prediction with RHP
rhp <- rhp %>%
left_join(select(batter_stats, -rate, -pitches, -pitch_whiff),
by = c("batter" = "batter", "pitch_type" = "pitch_type"))
View(rhp)
rhp <- rhp %>%
mutate(prev_pitch = ifelse(is.na(prev_pitch), "None", prev_pitch)) %>%
mutate(Count = paste0(balls, "-", strikes)) %>%
mutate(Count = as.factor(Count))
View(rhp)
install.packages("teamcolors")
