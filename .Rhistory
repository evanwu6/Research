arsenal_perc <- arsenal_perc %>%
pivot_longer(cols = n_ff:n_sv,
names_to = "pitch_type",
values_to = "pitch_usage") %>%
filter(!is.na(pitch_usage)) %>%
mutate(pitch_type = str_replace(pitch_type, "n_ff", "FF"),
pitch_type = str_replace(pitch_type, "n_si", "SI"),
pitch_type = str_replace(pitch_type, "n_fc", "FC"),
pitch_type = str_replace(pitch_type, "n_sl", "SL"),
pitch_type = str_replace(pitch_type, "n_ch", "CH"),
pitch_type = str_replace(pitch_type, "n_cu", "CU"),
pitch_type = str_replace(pitch_type, "n_fs", "FS"),
pitch_type = str_replace(pitch_type, "n_st", "ST"),
pitch_type = str_replace(pitch_type, "n_sv", "SV"))
# Pitch Movement
# URL: https://baseballsavant.mlb.com/leaderboard/pitch-movement?year=2022&team=&min=50&pitch_type=ALL&hand=&x=diff_x_hidden&z=diff_z_hidden
arsenal_movement <- read_csv("Pitch Type Data/2022_arsenal_movement.csv") %>%
mutate(pitch_type = str_replace(pitch_type, "SIFT", "SI"),
pitch_type = str_replace(pitch_type, "CUKC", "CU")) %>%
filter(pitch_type != "FA")
arsenal_movement <- arsenal_movement %>%
rename(pitch_name = pitch_type_name,
player_id = pitcher_id) %>%
select(player_id, pitch_type, pitch_hand,
pitcher_break_x, pitcher_break_z, avg_speed)
# Pitch Stats
# URL: https://baseballsavant.mlb.com/leaderboard/pitch-arsenal-stats?type=pitcher&pitchType=&year=2022&team=&min=10
arsenal_stats <- read_csv("Pitch Type Data/2022_arsenal_stats.csv") %>%
mutate(pitch_type = str_replace(pitch_type, "SIFT", "SI"),
pitch_type = str_replace(pitch_type, "CUKC", "CU")) %>%
rename(rv100 = run_value_per_100,
team = team_name_alt) %>%
filter(pitch_type != "FA")
# Combining Databases
arsenal <- arsenal_stats %>%
left_join(select(arsenal_speed, pitcher:pitch_speed),
by = c("player_id" = "pitcher", "pitch_type" = "pitch_type")) %>%
left_join(select(arsenal_spin, pitcher:pitch_spin),
by = c("player_id" = "pitcher", "pitch_type" = "pitch_type")) %>%
left_join(arsenal_movement,
by = c("player_id" = "player_id", "pitch_type" = "pitch_type")) %>%
select(first_name, last_name, player_id, pitch_hand,
team:pitch_name, pitches, pitch_usage,
pitch_speed, pitch_spin, pitcher_break_x, pitcher_break_z,
rv100, run_value,
pa:hard_hit_percent, avg_speed) %>%
filter(!is.na(pitch_speed)) %>%
filter(!is.na(pitcher_break_z))
# Pitch-by-Pitch Data (9 Pitchers) ####
files <- list.files("Pitch Level Data/Pitcher Comps 2022/")
pitchers <- read_csv(paste0("Pitch Level Data/Pitcher Comps 2022/", files[1]))
for(i in 2:length(files)) {
pitchers <- rbind(pitchers,
read_csv(paste0("Pitch Level Data/Pitcher Comps 2022/",files[i])))
}
add <- stats_2022 %>%
select(player_id, woba)
pitchers <- pitchers %>%
left_join(add, by = c("pitcher...8" = "player_id")) %>%
mutate(ID = case_when(woba > 0.330 ~ "Bad",
woba < 0.280 ~ "Great",
TRUE ~ "Decent"),
win_exp_added = case_when(inning_topbot == "Bot"  ~ -delta_home_win_exp,
inning_topbot == "Top"  ~ delta_home_win_exp),
run_exp_added = -delta_run_exp,
ra_on_play = post_bat_score - bat_score) %>%
rename(player_id = pitcher...8,
hitter = stand,
pitch_speed = release_speed) %>%
select(ID, player_name, player_id, game_date, pitch_type, pitch_name,
pitch_speed, spin_axis, pfx_x:plate_z, ra_on_play,
release_pos_x, release_pos_z, bb_type:strikes, pitch_number,
hitter, home_team:type, outs_when_up, inning, ra_on_play,
run_exp_added, win_exp_added,
sz_top, sz_bot, hit_distance_sc:release_extension,
estimated_ba_using_speedangle:woba_value, at_bat_number) %>%
mutate(pitch_name = str_replace(pitch_name, "4-Seam Fastball", "4-Seam"))
# Making Pitcher Comparions ####
comps_2022 <- stats_2022 %>%
left_join(filter(arsenal_speed, pitch_type == "FF"), c("player_id" = "pitcher")) %>%
select(first_name.x, last_name.x, player_id, woba, pitch_speed) %>%
rename(first_name = first_name.x,
last_name = last_name.x,
FF_speed = pitch_speed) %>%
arrange(woba)
p10 <- quantile(comps_2022$woba, probs = 0.9)
p50 <- quantile(comps_2022$woba, probs = 0.5)
p90 <- quantile(comps_2022$woba, probs = 0.1)
pitchers_10 <- comps_2022 %>%
filter(woba > p10 - 0.010 & woba < p10 + 0.010,
FF_speed > 93 & FF_speed < 95) %>%
mutate(ID = "Bad")
pitchers_50 <- comps_2022 %>%
filter(woba > p50 - 0.010 & woba < p50 + 0.010,
FF_speed > 93 & FF_speed < 95) %>%
mutate(ID = "Decent")
pitchers_90 <- comps_2022 %>%
filter(woba > p90 - 0.010 & woba < p90 + 0.010,
FF_speed > 93.5 & FF_speed < 94.5) %>%
mutate(ID = "Great")
candidates <- rbind(pitchers_10, pitchers_50, pitchers_90)
sample <- candidates %>%
filter(player_id %in% c("641745", "621244", "680686",
"677651", "641154", "592791",
"668678", "453286", "666201"))
# CSV Exports ####
# Pitch Arsenal CSV
write.csv(arsenal, "arsenal.csv")
# Pitch-by-Pitch "Pitchers" CSV
write.csv(pitchers, "pitcher_comps.csv")
View(arsenal)
arsenal[1]
arsenal[,1]
arsenal[1,]
setwd("~/Downloads/Fall 2023/SABR Research/Research")
library(tidyverse)
library(readxl)
library(ggforce)
library(knitr)
data <- read_csv("pitch_arsenals_spin.csv")
setwd("~/Downloads/Fall 2023/SABR Research/Research")
library(tidyverse)
library(readxl)
library(ggforce)
library(knitr)
data <- read_csv("pitch_arsenals_spin.csv")
library(tidyverse)
library(readxl)
library(ggforce)
library(knitr)
data <- read_csv("CSVs/arsenal.csv")
strider <- read_csv("Pitch Level Data/Strider_9_13_23.csv") %>%
select(-game_date, -`pitcher...8`, -spin_dir:-break_length_deprecated,
-game_type, -home_team, -away_team)
# Auto Reading Data
files <- list.files("Data")
pitchers <- read_csv(paste0("Data/", files[1]))
pitchers <- read_csv("CSVs/pitcher_comps.csv")
library(tidyverse)
library(readxl)
library(ggforce)
library(knitr)
data <- read_csv("CSVs/arsenal.csv")
pitchers <- read_csv("CSVs/pitcher_comps.csv")
strider <- read_csv("Pitch Level Data/Strider_9_13_23.csv") %>%
select(-game_date, -`pitcher...8`, -spin_dir:-break_length_deprecated,
-game_type, -home_team, -away_team)
# Geom Zone (Jackie's) ####
geom_zone <- function(top = 11/3, bottom = 3/2, linecolor = "black"){
geom_rect(xmin = -.7083, xmax = .7083, ymin = bottom, ymax = top,
alpha = 0, color = linecolor, linewidth = 0.75)
}
# c(0, 0, -.25, -.5, -.25))
geom_plate <- function(pov = "pitcher"){
df <- case_when(
pov == "pitcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, .25, .5, .25)),
pov == "catcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, -.25, -.5, -.25))
)
g <- geom_polygon(data = df, aes(x = x, y = y), fill = "white", color = "black", linewidth = 1.25)
g
}
# Color / Shape = Pitch
strider %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_zone() +
geom_plate(pov = "pitcher") +
geom_point(aes(shape = pitch_type, color = pitch_type), alpha = 0.85) +
coord_fixed() +
labs(color = "Pitch",
shape = "Pitch",
title = "Spencer Strider",
subtitle = "Sep. 13, 2023 vs. PHI",
caption = "Data from Baseball Savant") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank())
# Color = Speed / Shape = Pitch
strider %>%
mutate(type = str_replace(type, "B", "Ball"),
type = str_replace(type, "S", "Strike"),
type = str_replace(type, "X", "In Play")) %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_segment(x = -8.5/12, y = 18/12, xend = 8.5/12, yend = 18/12,
linewidth = 0.5) +
geom_segment(x = -8.5/12, y = 44/12, xend = 8.5/12, yend = 44/12,
linewidth = 0.5) +
geom_segment(x = -8.5/12, y = 18/12, xend = -8.5/12, yend = 44/12,
linewidth = 0.5) +
geom_segment(x = 8.5/12, y = 18/12, xend = 8.5/12, yend = 44/12,
linewidth = 0.5) +
geom_point(aes(color = pitch_type, shape = type, size = type), alpha = 0.85) +
scale_shape_manual(values = c(1, 4, 18)) +
scale_size_manual(values = c(1, 1, 2)) +
coord_fixed() +
labs(color = "Pitch",
size = "Result",
shape = "Result",
title = "Spencer Strider",
subtitle = "Sep. 13, 2023 vs. PHI",
caption = "Data from Baseball Savant") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank())
strider %>%
ggplot(aes(x = -pfx_x*12, y = pfx_z*12)) +
geom_vline(xintercept = 0, linewidth = 0.5) +
geom_hline(yintercept = 0, linewidth= 0.5) +
geom_point(aes(shape = pitch_type, color = pitch_type), alpha = 0.85) +
coord_fixed() +
labs(x = "Induced Horizontal Movement",
y = "Induced Vertical Movement",
color = "Pitch",
shape = "Pitch",
title = "Spencer Strider",
subtitle = "Sep. 13, 2023 vs. PHI",
caption = "Data from Baseball Savant") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
strider %>%
ggplot(aes(x = -plate_x, y = plate_z, color = pitch_type)) +
geom_zone() +
geom_mark_hull(expand = unit(2, "mm"), size = .8, show.legend = FALSE) +
geom_point(alpha = 0.5) +
coord_fixed(ratio = 1) +
labs(title = "Spencer Strider",
subtitle = "ATL @ PHI - September 13, 2023",
x = "Horizontal Position", y = "Vertical Position",
color = "Release Speed") +
theme_bw() +
facet_wrap(~pitch_type, nrow = 2)
strider %>%
ggplot(aes(x = spin_axis, y = 1)) +
geom_point(aes(color = pitch_type), alpha = 0.25) +
# geom_jitter(aes(color = pitch_type), width = 0, height = 0.0001) +
coord_polar(start = pi) +
labs(color = "Pitch",
title = "Spencer Strider Spin Direction",
subtitle = "ATL @ PHI - September 13, 2023") +
scale_x_continuous(breaks = seq(0, 360, 60), limits = c(0, 360)) +
theme(panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
NULL
strider %>%
filter(pitch_type == "SL") %>%
ggplot(aes(x = spin_axis, y = pfx_z)) +
geom_point(aes(color = pitch_type), alpha = 0.75) +
labs(color = "Pitch",
title = "Spencer Strider Spin Direction",
subtitle = "ATL @ PHI - September 13, 2023") +
geom_smooth(se = FALSE) +
NULL
comps_2022 <- stats_2022 %>%
left_join(speed_2022, c("player_id" = "pitcher")) %>%
select(first_name.x, last_name.x, player_id, woba, ff_avg_speed) %>%
rename(first_name = first_name.x,
last_name = last_name.x,
FF_speed = ff_avg_speed) %>%
arrange(woba)
library(tidyverse)
library(readxl)
library(ggforce)
library(knitr)
data <- read_csv("CSVs/arsenal.csv")
pitchers <- read_csv("CSVs/pitcher_comps.csv")
strider <- read_csv("Pitch Level Data/Strider_9_13_23.csv") %>%
select(-game_date, -`pitcher...8`, -spin_dir:-break_length_deprecated,
-game_type, -home_team, -away_team)
# Geom Zone (Jackie's) ####
geom_zone <- function(top = 11/3, bottom = 3/2, linecolor = "black"){
geom_rect(xmin = -.7083, xmax = .7083, ymin = bottom, ymax = top,
alpha = 0, color = linecolor, linewidth = 0.75)
}
# c(0, 0, -.25, -.5, -.25))
geom_plate <- function(pov = "pitcher"){
df <- case_when(
pov == "pitcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, .25, .5, .25)),
pov == "catcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, -.25, -.5, -.25))
)
g <- geom_polygon(data = df, aes(x = x, y = y), fill = "white", color = "black", linewidth = 1.25)
g
}
# Color / Shape = Pitch
strider %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_zone() +
geom_plate(pov = "pitcher") +
geom_point(aes(shape = pitch_type, color = pitch_type), alpha = 0.85) +
coord_fixed() +
labs(color = "Pitch",
shape = "Pitch",
title = "Spencer Strider",
subtitle = "Sep. 13, 2023 vs. PHI",
caption = "Data from Baseball Savant") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank())
# Color = Speed / Shape = Pitch
strider %>%
mutate(type = str_replace(type, "B", "Ball"),
type = str_replace(type, "S", "Strike"),
type = str_replace(type, "X", "In Play")) %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_segment(x = -8.5/12, y = 18/12, xend = 8.5/12, yend = 18/12,
linewidth = 0.5) +
geom_segment(x = -8.5/12, y = 44/12, xend = 8.5/12, yend = 44/12,
linewidth = 0.5) +
geom_segment(x = -8.5/12, y = 18/12, xend = -8.5/12, yend = 44/12,
linewidth = 0.5) +
geom_segment(x = 8.5/12, y = 18/12, xend = 8.5/12, yend = 44/12,
linewidth = 0.5) +
geom_point(aes(color = pitch_type, shape = type, size = type), alpha = 0.85) +
scale_shape_manual(values = c(1, 4, 18)) +
scale_size_manual(values = c(1, 1, 2)) +
coord_fixed() +
labs(color = "Pitch",
size = "Result",
shape = "Result",
title = "Spencer Strider",
subtitle = "Sep. 13, 2023 vs. PHI",
caption = "Data from Baseball Savant") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank())
strider %>%
ggplot(aes(x = -pfx_x*12, y = pfx_z*12)) +
geom_vline(xintercept = 0, linewidth = 0.5) +
geom_hline(yintercept = 0, linewidth= 0.5) +
geom_point(aes(shape = pitch_type, color = pitch_type), alpha = 0.85) +
coord_fixed() +
labs(x = "Induced Horizontal Movement",
y = "Induced Vertical Movement",
color = "Pitch",
shape = "Pitch",
title = "Spencer Strider",
subtitle = "Sep. 13, 2023 vs. PHI",
caption = "Data from Baseball Savant") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
strider %>%
ggplot(aes(x = -plate_x, y = plate_z, color = pitch_type)) +
geom_zone() +
geom_mark_hull(expand = unit(2, "mm"), size = .8, show.legend = FALSE) +
geom_point(alpha = 0.5) +
coord_fixed(ratio = 1) +
labs(title = "Spencer Strider",
subtitle = "ATL @ PHI - September 13, 2023",
x = "Horizontal Position", y = "Vertical Position",
color = "Release Speed") +
theme_bw() +
facet_wrap(~pitch_type, nrow = 2)
strider %>%
ggplot(aes(x = spin_axis, y = 1)) +
geom_point(aes(color = pitch_type), alpha = 0.25) +
# geom_jitter(aes(color = pitch_type), width = 0, height = 0.0001) +
coord_polar(start = pi) +
labs(color = "Pitch",
title = "Spencer Strider Spin Direction",
subtitle = "ATL @ PHI - September 13, 2023") +
scale_x_continuous(breaks = seq(0, 360, 60), limits = c(0, 360)) +
theme(panel.grid.minor = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank()) +
NULL
strider %>%
filter(pitch_type == "SL") %>%
ggplot(aes(x = spin_axis, y = pfx_z)) +
geom_point(aes(color = pitch_type), alpha = 0.75) +
labs(color = "Pitch",
title = "Spencer Strider Spin Direction",
subtitle = "ATL @ PHI - September 13, 2023") +
geom_smooth(se = FALSE) +
NULL
pitchers %>%
filter(player_id == "641154") %>%
ggplot(aes(x = -pfx_x*12, y = pfx_z*12)) +
geom_vline(xintercept = 0, linewidth = 0.5) +
geom_hline(yintercept = 0, linewidth= 0.5) +
geom_point(aes(color = pitch_name), alpha = 0.35, shape = 18, size = 2) +
coord_fixed() +
labs(x = "Induced Horizontal Movement",
y = "Induced Vertical Movement",
color = "Pitch",
shape = "Pitch",
title = "Pablo Lopez",
subtitle = "2022 Season",
caption = "Data from Baseball Savant") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
pitchers %>%
filter(player_id == "641154",
pitch_name == "Sinker") %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_zone() +
geom_plate() +
geom_vline(xintercept = 0, linewidth = 0.5) +
geom_hline(yintercept = 0, linewidth= 0.5) +
geom_point(alpha = 0.65, shape = 18, size = 2.5) +
coord_fixed() +
labs(color = "Pitch",
shape = "Pitch",
title = "Pablo Lopez's Sinkers",
subtitle = "2022 Season",
caption = "Data from Baseball Savant") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
pitchers %>%
filter(player_id == "666201") %>%
ggplot(aes(x = -pfx_x*12, y = pfx_z*12)) +
geom_vline(xintercept = 0, linewidth = 0.5) +
geom_hline(yintercept = 0, linewidth= 0.5) +
geom_point(aes(color = pitch_name), alpha = 0.35, shape = 18, size = 2) +
coord_fixed() +
labs(x = "Induced Horizontal Movement",
y = "Induced Vertical Movement",
color = "Pitch",
shape = "Pitch",
title = "Alek Manoah",
subtitle = "2022 Season",
caption = "Data from Baseball Savant") +
theme_minimal() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
strider %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_zone() +
geom_mark_hull(expand = unit(2, "mm"), size = .8, show.legend = FALSE) +
geom_point(aes(color = pitch_type), alpha = 0.5) +
coord_fixed(ratio = 1) +
labs(title = "Spencer Strider",
subtitle = "ATL @ PHI - September 13, 2023",
x = "Horizontal Position", y = "Vertical Position",
color = "Release Speed") +
theme_bw()
strider %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_zone() +
geom_mark_hull(expand = unit(2, "mm"), size = .8, show.legend = FALSE,
color = "gray", alpha = 0.7) +
geom_point(aes(color = pitch_type), alpha = 0.75, size = 1.25) +
coord_fixed(ratio = 1) +
labs(title = "Spencer Strider",
subtitle = "ATL @ PHI - September 13, 2023",
x = "Horizontal Position", y = "Vertical Position",
color = "Release Speed") +
theme_bw()
strider %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_zone() +
geom_mark_hull(expand = unit(2, "mm"), size = .8, show.legend = FALSE,
color = "gray", alpha = 0.7) +
geom_point(aes(color = pitch_name), alpha = 0.75, size = 1.25) +
coord_fixed(ratio = 1) +
labs(title = "Spencer Strider",
subtitle = "ATL @ PHI - September 13, 2023",
color = "Pitch Type") +
theme_bw()
strider %>%
mutate(pitch_name = str_replace(pitch_name, "4-Seam Fastball", "4-Seam")) %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_zone() +
geom_mark_hull(expand = unit(2, "mm"), size = .8, show.legend = FALSE,
color = "gray", alpha = 0.7) +
geom_point(aes(color = pitch_name), alpha = 0.75, size = 1.25) +
coord_fixed(ratio = 1) +
labs(title = "Spencer Strider",
subtitle = "ATL @ PHI - September 13, 2023",
x = "", y = "",
color = "Pitch Type") +
theme_bw()
