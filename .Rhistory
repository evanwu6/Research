axis.title.y = element_blank(),
axis.title.x = element_blank()) +
labs(color = "Pitch Type")
file_graph_rf <- paste0("Reports/Game Reports ", date, "/Graphics/", name_file, ".", "rf.png")
ggsave(filename = file_graph_rf, plot = graph_rf,
width = 4.25, height = 4, dpi = 300)
# Release Side Plot
graph_rs <- pitcher_data %>%
ggplot() +
coord_fixed() +
geom_rect(aes(xmin = 0.0175, xmax = 7, ymin = 0, ymax = 0.25), fill = "#76552B", color = "#76552B") +
geom_rect(aes(xmin = 0.0175, xmax = 4.5, ymin = 0.25, ymax = 0.65), fill = "#76552B", color = "#76552B") +
geom_rect(aes(xmin = 4.5, xmax = 6, ymin = 0.25, ymax = 0.45), fill = "#76552B", color = "#76552B") +
geom_curve(aes(x = 0, y = 0.75, xend = 7, yend = 0.2), size = 5, curvature = -0.05, color = "#76552B") +
geom_rect(aes(xmin = 0.70, xmax = 0.95, ymin = 0.845, ymax = 0.97), fill = "white", color = "black") +
geom_point(aes(x = Extension, y = RelHeight, color = TaggedPitchType),
size = 3, alpha = 0.75, shape = 1, show.legend = FALSE) +
scale_color_trackman() +
theme_classic() +
theme(text = element_text(family = "Times New Roman", size = 15),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.y = element_blank(),
axis.title.x = element_blank()) +
labs(color = "Pitch Type")
file_graph_rs <- paste0("Reports/Game Reports ", date, "/Graphics/", name_file, ".", "rs.png")
ggsave(filename = file_graph_rs, plot = graph_rs,
width = 5, height = 4, dpi = 300)
# Quality of Contact
graph_qc <- pitcher_data %>%
filter(PitchCall %in%
c("StrikeSwinging", "StrikeCalled", "InPlay")) %>%
mutate(SwingResult = ifelse(PitchCall == "StrikeSwinging",
"Swing & Miss", NA),
SwingResult = ifelse(PitchCall == "StrikeCalled", "Strike Called", SwingResult),
SwingResult = ifelse(PitchCall == "InPlay" & ExitSpeed >= 90,
"Hard Hit", SwingResult),
SwingResult = ifelse(PitchCall == "InPlay" & ExitSpeed < 90,
"Non-Hard Hit", SwingResult)) %>%
filter(!is.na(SwingResult)) %>%
mutate(SwingResult = as.factor(SwingResult)) %>%
ggplot() +
geom_plate() +
geom_zone() +
geom_point(aes(x = PlateLocSide, y = PlateLocHeight, color = TaggedPitchType),
size = 2.5, alpha = 0.7) +
geom_segment(aes(x = PlateLocSide, xend = tunnel_horz,
y = PlateLocHeight, yend = tunnel_vert,
color = TaggedPitchType),
size = 1, alpha = 0.5, show.legend = FALSE) +
scale_color_trackman() +
scale_shape_manual(values = c("Swing & Miss" = 4, "Foul" = 8,
"Hard Hit" = 18, "Non-Hard Hit" = 16),
drop = TRUE) +
xlim(-1.5, 1.5) + ylim(1, 3.75) + coord_fixed() +
theme_bw() +
theme(text = element_text(family = "Times New Roman", size = 20),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
strip.background = element_blank(),
strip.text = element_text(family = "Times New Roman", size = 20),
panel.border = element_blank(),
legend.position = "bottom",
legend.title = element_blank()) +
labs(color = "Pitch Type") +
facet_wrap(~ SwingResult, ncol = 2) +
guides(color = guide_legend(order = 1))
file_graph_qc <- paste0("Reports/Game Reports ", date, "/Graphics/", name_file, ".", "qc.png")
ggsave(filename = file_graph_qc, plot = graph_qc,
width = 5.75, height = 5.25, dpi = 300)
# Extension
graph_e <- pitcher_data %>%
ggplot() +
# geom_boxplot(aes(x = Extension, y = TaggedPitchType, color = TaggedPitchType),
#            show.legend = FALSE, alpha = 0) +
geom_point(aes(x = Extension, y = TaggedPitchType, color = TaggedPitchType),
size = 4, alpha = 0.8, show.legend = FALSE) +
geom_text(aes(x = Extension, y = TaggedPitchType, label = PitchCount),
size = 2, family = "Times New Roman",
color = "white", show.legend = FALSE) +
xlim(4, 7) +
theme_bw() +
theme(text = element_text(family = "Times New Roman", size = 20),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
panel.border = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.major.x = element_line(color = "darkgray"),
panel.grid.minor = element_blank(),
axis.ticks = element_blank())
file_graph_e <- paste0("Reports/Game Reports ", date, "/Graphics/", name_file, ".", "e.png")
ggsave(filename = file_graph_e, plot = graph_e,
width = 7, height = 2.5, dpi = 300)
# Pitch Movement by Pitch Type & Number
graph_pmpt <- pitcher_data %>%
ggplot(aes(x = HorzBreak, y = InducedVertBreak)) +
geom_vline(xintercept = 0, color = "black", size = 1) +
geom_hline(yintercept = 0, color = "black", size = 1) +
geom_point(aes(color = TaggedPitchType), size = 7.5, alpha = 0.65, show.legend = FALSE) +
geom_text(aes(label = PitchCount),
size = 4.5, family = "Times New Roman",
color = "white", show.legend = FALSE) +
xlim(-max(abs(data$HorzBreak)), max(abs(data$HorzBreak))) +
ylim(-max(abs(data$InducedVertBreak)), max(abs(data$InducedVertBreak))) +
coord_fixed() +
scale_color_trackman() +
theme_classic() +
theme(text = element_text(family = "Times New Roman", size = 20),
axis.line = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_text(hjust = 0.5),
strip.text = element_text(family = "Times New Roman", size = 20),
strip.background = element_blank()) +
labs(color = "Pitch Type",
x = "Horizontal Break",
y = "Induced Vertical Break") +
facet_wrap(~ TaggedPitchType,
ncol = 2)
file_graph_pmpt <- paste0("Reports/Game Reports ", date, "/Graphics/", name_file, ".", "pmpt.png")
ggsave(filename = file_graph_pmpt, plot = graph_pmpt,
width = 7.75, height = 8.25, dpi = 300)
# Quality of Contact by Pitch Type (xwOBA)
data_advanced <- pitcher_data %>%
mutate(Outcome = case_when(PlayResult %in% c("Single", "Double", "Triple", "HomeRun") ~ PlayResult,
PlayResult  %in%  c("Out", "FieldersChoice", "Error", "Sacrifice") ~ "Out",
KorBB == "Strikeout" ~ "Out",
KorBB == "Walk" ~ "Walk",
PitchCall == "HitByPitch" ~ "HBP",
TRUE ~ "Undefined")) %>%
mutate(rExitSpeed = round(ExitSpeed, 0),
rAngle = round(Angle, 0)) %>%
left_join(xwOBA_Value, by = c("rExitSpeed", "rAngle")) %>%
mutate(xwOBA = ifelse(KorBB == "Walk", 0.69, xwOBA),
xwOBA = ifelse(PitchCall == "HitByPitch", 0.72, xwOBA),
xwOBA = ifelse(KorBB == "Strikeout", 0, xwOBA),
wOBA = case_when(Outcome == "Out" ~ 0,
PlayResult == "Single" ~ 0.89,
PlayResult == "Double" ~ 1.27,
PlayResult == "Triple" ~ 1.62,
PlayResult == "HomeRun" ~ 2.10,
PitchCall == "HitByPitch" ~ 0.72,
KorBB == "Walk" ~ 0.69,
KorBB == "Strikeout" ~ 0)) %>%
filter(Outcome != "Undefined") %>%
filter(!is.na(xwOBA))
xwOBA <- mean(data_advanced$xwOBA, na.rm = TRUE) %>% round(4)
if(xwOBA >= 0.02557548){
xwOBA_p <- find_percentile_xwOBA(wOBAs_Percentile, xwOBA)[1, 1] %>% round(0)
}
wOBA <- mean(data_advanced$wOBA, na.rm = TRUE) %>% round(4)
if(wOBA > 0){
wOBA_p <- find_percentile_wOBA(wOBAs_Percentile, wOBA)[1, 1] %>% round(0)
}
if(xwOBA < 0.02557548){
xwOBA_p <- 100
}
if(wOBA == 0){
wOBA_p <- 100
}
xwOBA_max <- data_advanced %>%
group_by(TaggedPitchType) %>%
summarize("At Bats" = n(),
xwOBA = round(mean(xwOBA, na.rm = TRUE), 3)) %>%
ungroup() %>%
summarize(max(xwOBA, na.rm = TRUE)) %>%
as.numeric()
graph_xwOBA <- data_advanced %>%
group_by(TaggedPitchType) %>%
summarize("At Bats" = n(),
xwOBA = round(mean(xwOBA, na.rm = TRUE), 3)) %>%
arrange(desc(`At Bats`)) %>%
mutate(label = as.character(format(xwOBA, digits = 3, scientific = FALSE)),
label = paste0(label, "   ")) %>%
mutate(TaggedPitchType = as.factor(TaggedPitchType),
TaggedPitchType = fct_reorder(TaggedPitchType, `At Bats`)) %>%
ggplot(aes(y = TaggedPitchType, x = xwOBA)) +
geom_col(fill = "#B59A57") +
geom_vline(xintercept = xwOBA,
linetype = 2, size = 1.1, color = "#73000A") +
geom_text(aes(label = label), nudge_x = xwOBA_max / 6,
color = "#B59A57", size = 6,
family = "Times New Roman", fontface = "bold") +
scale_x_continuous(labels = scales::number_format(accuracy = 0.001)) +
labs(subtitle = paste("Overall Outing xwOBA:", round(xwOBA, 3)),
y = "Pitch Type") +
theme_classic() +
theme(text = element_text(family = "Times New Roman", size = 20),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.y = element_blank())
file_graph_xwOBA <- paste0("Reports/Game Reports ", date, "/Graphics/", name_file, ".", "xwoba.png")
ggsave(filename = file_graph_xwOBA, plot = graph_xwOBA,
width = 6.5, height = 4, dpi = 300)
# Batted Balls
total <- pitcher_data %>%
filter(PitchCall == "InPlay") %>%
mutate(PitchCount = row_number()) %>%
summarize("Ground" = sum(TaggedHitType == "GroundBall", na.rm = TRUE),
"Fly" = sum(TaggedHitType == "FlyBall", na.rm = TRUE),
"Line" = sum(TaggedHitType == "LineDrive", na.rm = TRUE),
"Pop" = sum(TaggedHitType == "PopUp", na.rm = TRUE)) %>%
mutate(Pitch = "Total") %>%
select(Pitch, Ground:Pop)
table_bb <- pitcher_data %>%
filter(PitchCall == "InPlay") %>%
mutate(PitchCount = row_number()) %>%
group_by(TaggedPitchType) %>%
rename(Pitch = TaggedPitchType) %>%
summarize("Ground" = sum(TaggedHitType == "GroundBall", na.rm = TRUE),
"Fly" = sum(TaggedHitType == "FlyBall", na.rm = TRUE),
"Line" = sum(TaggedHitType == "LineDrive", na.rm = TRUE),
"Pop" = sum(TaggedHitType == "PopUp", na.rm = TRUE)) %>%
rbind(total) %>%
tableGrob(rows = NULL, theme = custom_theme)
table_bb <- ggplot() +
annotation_custom(table_bb) +
theme_classic() +
theme(text = element_text(family = "Times New Roman", size = 20),
title = element_text(family = "Times New Roman", size = 20))
file_table_bb <- paste0("Reports/Game Reports ", date, "/Graphics/", name_file, ".", "bb.png")
ggsave(filename = file_table_bb, plot = table_bb,
width = 3, height = 1.75, dpi = 300)
# Hard Hit Balls
total_h <- pitcher_data %>%
filter(PitchCall == "InPlay",
ExitSpeed >= 90) %>%
mutate(PitchCount = row_number()) %>%
summarize("Ground" = sum(TaggedHitType == "GroundBall", na.rm = TRUE),
"Fly" = sum(TaggedHitType == "FlyBall", na.rm = TRUE),
"Line" = sum(TaggedHitType == "LineDrive", na.rm = TRUE),
"Pop" = sum(TaggedHitType == "PopUp", na.rm = TRUE)) %>%
mutate(Pitch = "Total") %>%
select(Pitch, Ground:Pop)
table_hhb <- pitcher_data %>%
filter(PitchCall == "InPlay",
ExitSpeed >= 90) %>%
mutate(PitchCount = row_number()) %>%
group_by(TaggedPitchType) %>%
rename(Pitch = TaggedPitchType) %>%
summarize("Ground" = sum(TaggedHitType == "GroundBall", na.rm = TRUE),
"Fly" = sum(TaggedHitType == "FlyBall", na.rm = TRUE),
"Line" = sum(TaggedHitType == "LineDrive", na.rm = TRUE),
"Pop" = sum(TaggedHitType == "PopUp", na.rm = TRUE)) %>%
rbind(total_h) %>%
tableGrob(rows = NULL, theme = custom_theme)
table_hhb <- ggplot() +
annotation_custom(table_hhb) +
theme_classic() +
theme(text = element_text(family = "Times New Roman", size = 20),
title = element_text(family = "Times New Roman", size = 20))
file_table_hhb <- paste0("Reports/Game Reports ", date, "/Graphics/", name_file, ".", "hhb.png")
ggsave(filename = file_table_hhb, plot = table_hhb,
width = 3, height = 1.75, dpi = 300)
# Location by Batter Handedness
pitch_n <- pitcher_data %>%
group_by(TaggedPitchType) %>%
summarize(n = n())
graph_loch <- pitcher_data %>%
mutate(TaggedPitchType = as.factor(TaggedPitchType),
BatterSide = str_replace(BatterSide, "Left", "Left Handed"),
BatterSide = str_replace(BatterSide, "Right", "Right Handed")) %>%
left_join(pitch_n, by = "TaggedPitchType") %>%
mutate(TaggedPitchType = fct_reorder(TaggedPitchType, desc(n))) %>%
ggplot() +
geom_plate(size = 0.7) +
geom_zone(size = 0.8) +
geom_point(aes(x = PlateLocSide, y = PlateLocHeight,
color = TaggedPitchType),
size = 2, alpha = 0.7) +
geom_segment(aes(x = PlateLocSide, xend = tunnel_horz,
y = PlateLocHeight, yend = tunnel_vert,
color = TaggedPitchType),
size = 1.5, alpha = 1, show.legend = FALSE) +
scale_color_manual(values = c("Fastball" = "black", "Cutter" = "purple",
"Sinker" = "red", "Slider" = "blue",
"ChangeUp" = "chartreuse3", "Curveball" = "darkorange"),
guide = "none") +
xlim(-2, 2) + ylim(0, 4.5) + coord_fixed() +
theme_bw() +
theme(text = element_text(family = "Times New Roman", size = 20),
axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5),
strip.background = element_blank(),
strip.text = element_text(family = "Times New Roman", size = 20),
panel.border = element_blank()) +
labs() +
facet_grid(rows = vars(BatterSide),
cols = vars(TaggedPitchType))
file_graph_loch <- paste0("Reports/Game Reports ", date, "/Graphics/", name_file, ".", "loch.png")
ggsave(filename = file_graph_loch, plot = graph_loch,
width = 9, height = 6, dpi = 300)
# Count Outcomes vs. RHH
table_corhh <- pitcher_data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "P Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "P Behind",
count == "3_2" ~ "Full")) %>%
filter(BatterSide == "Right") %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>%
mutate(Total = rowSums(select(., -count_state), na.rm = TRUE)) %>%
rename(Count = count_state)
table_corhh[is.na(table_corhh)] <- 0
if(nrow(table_corhh) > 0) {
table_corhh <- table_corhh %>%
tableGrob(rows = NULL, theme = custom_theme)
ggplot() +
annotation_custom(table_corhh) +
theme_classic() +
theme(text = element_text(family = "Times New Roman", size = 20),
title = element_text(family = "Times New Roman", size = 20))
file_table_corhh <- paste0("Reports/Game Reports ", date, "/Graphics/", name_file, ".", "corhh.png")
ggsave(filename = file_table_corhh, plot = table_corhh,
width = 4.5, height = 1.5, dpi = 300)
}
# Count Outcomes vs. LHH
table_colhh <- pitcher_data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "P Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "P Behind",
count == "3_2" ~ "Full")) %>%
filter(BatterSide == "Left") %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>%
mutate(Total = rowSums(select(., -count_state), na.rm = TRUE)) %>%
rename(Count = count_state)
table_colhh[is.na(table_colhh)] <- 0
if(nrow(table_colhh) > 0) {
table_colhh <- table_colhh %>%
tableGrob(rows = NULL, theme = custom_theme)
ggplot() +
annotation_custom(table_colhh) +
theme_classic() +
theme(text = element_text(family = "Times New Roman", size = 20),
title = element_text(family = "Times New Roman", size = 20))
file_table_colhh <- paste0("Reports/Game Reports ", date, "/Graphics/", name_file, ".", "colhh.png")
ggsave(filename = file_table_colhh, plot = table_colhh,
width = 4.5, height = 1.5, dpi = 300)
}
# Writing PDFs ####
# Reading In All Templates
Rep1 <- image_read_pdf("Report Template Pages/Reports 1.pdf")
Rep2 <- image_read_pdf("Report Template Pages/Reports 2.pdf")
Rep3 <- image_read_pdf("Report Template Pages/Reports 3.pdf")
Rep4 <- image_read_pdf("Report Template Pages/Reports 4.pdf")
Rep5 <- image_read_pdf("Report Template Pages/Reports 5.pdf")
### REPORT PAGE 1 ###
Rep1 <- image_annotate(Rep1, name_title, font = "Times New Roman", size = 40, weight = 700, color = "#B59A57", location = "+150+100", gravity = "NorthEast")
Rep1 <- image_annotate(Rep1, toupper(paste(name_date, "vs.", opponent)), font = "Times New Roman", size = 40, weight = 700, color = "#B59A57", location = "+0+100", gravity = "North")
Rep1 <- image_composite(Rep1, image_read(file_graph_pm), offset = "+200+750")
Rep1 <- image_composite(Rep1, image_read(file_graph_pv), offset = "+3450+2225")
Rep1 <- image_composite(Rep1, image_resize(image_read(file_table_om), "2800x800"), offset = "+3075+650")
Rep1 <- image_composite(Rep1, image_resize(image_read(file_table_obom), "2800x800"), offset = "+3075+1300")
Rep1 <- image_composite(Rep1, image_annotate(Rep1, paste("Shove Score:", round(shove_score, 0)),
font = "Times New Roman", size = 55, weight = 1000, color = "#B59A57", location = "+3685+3035"))
Rep2 <- image_annotate(Rep2, name_title, font = "Times New Roman", size = 40, weight = 700, color = "#B59A57", location = "+150+100", gravity = "NorthEast")
Rep2 <- image_annotate(Rep2, toupper(paste(name_date, "vs.", opponent)), font = "Times New Roman", size = 40, weight = 700, color = "#B59A57", location = "+0+100", gravity = "North")
Rep2 <- image_composite(Rep2, image_read(file_graph_pl), offset = "+65+550")
Rep2 <- image_composite(Rep2, image_read(file_graph_rf), offset = "+2300+600")
Rep2 <- image_composite(Rep2, image_read(file_graph_rs), offset = "+2200+2100")
Rep2 <- image_composite(Rep2, image_read(file_graph_qc), offset = "+4000+575")
Rep2 <- image_composite(Rep2, image_read(file_graph_e), offset = "+3850+2550")
Rep3 <- image_annotate(Rep3, name_title, font = "Times New Roman", size = 40, weight = 700, color = "#B59A57", location = "+150+100", gravity = "NorthEast")
Rep3 <- image_annotate(Rep3, toupper(paste(name_date, "vs.", opponent)), font = "Times New Roman", size = 40, weight = 700, color = "#B59A57", location = "+0+100", gravity = "North")
Rep3 <- image_composite(Rep3, image_resize(image_read(file_graph_pmpt), "2560x2720"), offset = "+200+550")
Rep3 <- image_composite(Rep3, image_resize(image_read(file_graph_xwOBA), "2015x1135"), offset = "+3575+600")
Rep3 <- image_composite(Rep3, image_resize(image_read(file_table_bb), "1340x765"), offset = "+3140+2275")
Rep3 <- image_composite(Rep3, image_resize(image_read(file_table_hhb), "1340x765"), offset = "+4590+2275")
Rep4 <- image_annotate(Rep4, name_title, font = "Times New Roman", size = 40, weight = 700, color = "#B59A57", location = "+150+100", gravity = "NorthEast")
Rep4 <- image_annotate(Rep4, toupper(paste(name_date, "vs.", opponent)), font = "Times New Roman", size = 40, weight = 700, color = "#B59A57", location = "+0+100", gravity = "North")
Rep4 <- image_composite(Rep4, image_resize(image_read(file_graph_loch), "3500x2300"), offset = "+60+750")
if(nrow(table_corhh) > 0) {
Rep4 <- image_composite(Rep4, image_resize(image_read(file_table_corhh), "2325x775"), offset = "+3600+700")
}
if(nrow(table_colhh) > 0) {
Rep4 <- image_composite(Rep4, image_resize(image_read(file_table_colhh), "2325x775"), offset = "+3600+2200")
}
Rep5 <- image_annotate(Rep5, name_title, font = "Times New Roman", size = 40, weight = 700, color = "#B59A57", location = "+150+100", gravity = "NorthEast")
Rep5 <- image_annotate(Rep5, toupper(paste(name_date, "vs.", opponent)), font = "Times New Roman", size = 40, weight = 700, color = "#B59A57", location = "+0+100", gravity = "North")
Full_Rep <- image_join(Rep1, Rep2, Rep3, Rep4, Rep5)
image_write(Full_Rep, path=paste0("Reports/Game Reports ", date, "/", name_file, "_", date, ".pdf"), format="pdf", quality = 100, density = 300)
print(paste0(name_title, " Completed ", "(",i, " of ", nrow(summary_data), ")"))
if(i == nrow(summary_data)){
print("Loop Complete")
}
}
# Specify Game Date ####
date <- "02_05"
opponent <- "Live ABs"
location <- "LiveABs"
# Colors
palettes <- list(
"Normal" = c("#000000", "#E69F00", "#56B4E9", "#0072B2",
"#F0E442", "#009E73", "#D55E00", "#CC79A7"),
"Set1" = brewer.pal(9, "Set1"),
"Set2" = brewer.pal(8, "Set2"),
"Set3" = brewer.pal(12, "Set3"))
# ggplot Functions
geom_zone <- function(top = 3.4, bottom = 1.5, linecolor = "black", size = 0.75){
geom_rect(xmin = -.7083, xmax = .7083, ymin = bottom, ymax = top,
alpha = 0, color = linecolor, linewidth = size)
}
geom_plate <- function(pov = "pitcher", size = 1){
df <- case_when(
pov == "pitcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, .25, .5, .25)),
pov == "catcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, -.25, -.5, -.25)))
g <- geom_polygon(data = df, aes(x = x, y = y), fill = "white", color = "black", linewidth = size)
g
}
scale_color_trackman <- function(colors = "normal"){
scale_color_manual(values = c("Fastball" = "black", "Cutter" = "purple",
"Sinker" = "red", "Slider" = "blue",
"ChangeUp" = "chartreuse3", "Curveball" = "darkorange"))
}
scale_fill_trackman <- function(colors = "normal"){
scale_fill_manual(values = c("Fastball" = "black", "Cutter" = "purple",
"Sinker" = "red", "Slider" = "blue",
"ChangeUp" = "chartreuse3", "Curveball" = "darkorange"))
}
# Tilt Function
S2HM <- function(seconds) {
hours <- seconds %/% 3600
minutes <- (seconds %% 3600) %/% 60
minutes_str <- sprintf("%02d", minutes)  # Add leading zero if needed
return(paste0(hours, ":", minutes_str))
}
# Name Fixer
swap_names <- function(name) {
parts <- strsplit(name, ", ")[[1]]
if (length(parts) == 2) {
return(paste(rev(parts), collapse = " "))
} else {
return(name)
}
}
find_percentile_xwOBA <- function(data, value) {
if (value <= min(data$xwOBA)) {
return(0)
} else if (value >= max(data$xwOBA)) {
return(100)
} else {
lower <- max(data[data$xwOBA <= value, "Percentile"])
upper <- min(data[data$xwOBA > value, "Percentile"])
lower_value <- data[data$Percentile == lower, "xwOBA"]
upper_value <- data[data$Percentile == upper, "xwOBA"]
# Linear interpolation
percentile <- lower + (value - lower_value) / (upper_value - lower_value) * (upper - lower)
return(percentile)
}
}
find_percentile_wOBA <- function(data, value) {
if (value <= min(data$wOBA)) {
return(100)
} else if (value >= max(data$wOBA)) {
return(0)
} else {
lower <- max(data[data$wOBA <= value, "Percentile"])
upper <- min(data[data$wOBA > value, "Percentile"])
lower_value <- data[data$Percentile == lower, "wOBA"]
upper_value <- data[data$Percentile == upper, "wOBA"]
# Linear interpolation
percentile <- lower + (value - lower_value) / (upper_value - lower_value) * (upper - lower)
return(percentile)
}
}
convert_date_format <- function(date_string) {
date_string <- gsub("_", "/", date_string)
date_string <- paste(date_string, format(Sys.Date(), "%Y"), sep = "/")
date <- mdy(date_string)
month_name <- toupper(month(date, label = TRUE, abbr = TRUE))
day <- day(date)
day_suffix <- ifelse(day %in% c(11, 12, 13), "TH",
ifelse(day %% 10 == 1, "ST",
ifelse(day %% 10 == 2, "ND",
ifelse(day %% 10 == 3, "RD", "TH"))))
formatted_date <- paste0(month_name, " ", day, day_suffix)
return(formatted_date)
}
is.barrel <- function(LA, EV){
EV <- EV + 5
upper <- 1.11*EV - 78.89
lower <- -EV + 124
outcome <- (LA >= lower) & (LA <= upper) & (EV >= 98) & (LA >= 8) & (LA <= 50)
outcome <- replace_na(outcome, FALSE)
outcome
}
# Pitch Order
pitch_order <- c("Fastball", "Sinker", "Cutter", "Slider", "Curveball", "ChangeUp")
# Data ####
data <- read_csv(paste0("Data/", location, "_", date, ".csv"))
