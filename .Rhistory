mutate(pitch_type = str_replace(pitch_type, "SIFT", "SI"),
pitch_type = str_replace(pitch_type, "CUKC", "CU")) %>%
filter(pitch_type != "FA")
arsenal_movement <- arsenal_movement %>%
rename(pitch_name = pitch_type_name,
player_id = pitcher_id) %>%
select(player_id, pitch_type, pitch_hand,
pitcher_break_x, pitcher_break_z, avg_speed)
# Pitch Stats
# URL: https://baseballsavant.mlb.com/leaderboard/pitch-arsenal-stats?type=pitcher&pitchType=&year=2022&team=&min=10
arsenal_stats <- read_csv("Pitch Type Data/2022_arsenal_stats.csv") %>%
mutate(pitch_type = str_replace(pitch_type, "SIFT", "SI"),
pitch_type = str_replace(pitch_type, "CUKC", "CU")) %>%
rename(rv100 = run_value_per_100,
team = team_name_alt) %>%
filter(pitch_type != "FA")
# Combining Databases
arsenal <- arsenal_stats %>%
left_join(select(arsenal_speed, pitcher:pitch_speed),
by = c("player_id" = "pitcher", "pitch_type" = "pitch_type")) %>%
left_join(select(arsenal_spin, pitcher:pitch_spin),
by = c("player_id" = "pitcher", "pitch_type" = "pitch_type")) %>%
left_join(arsenal_movement,
by = c("player_id" = "player_id", "pitch_type" = "pitch_type")) %>%
select(first_name, last_name, player_id, pitch_hand,
team:pitch_name, pitches, pitch_usage,
pitch_speed, pitch_spin, pitcher_break_x, pitcher_break_z,
rv100, run_value,
pa:hard_hit_percent) %>%
filter(!is.na(pitch_speed)) %>%
filter(!is.na(pitcher_break_z))
arsenal <- arsenal %>%
rename(xBA = est_ba,
xSLG = est_slg,
xwOBA = est_woba,
PA = pa,
AVG = ba,
SLG = slg,
wOBA = woba,
spin_rate = pitch_spin)
# Pitch-by-Pitch Data (9 Pitchers) ####
files <- list.files("Pitch Level Data/Pitcher Comps 2022/")
pitchers <- read_csv(paste0("Pitch Level Data/Pitcher Comps 2022/", files[1]))
for(i in 2:length(files)) {
pitchers <- rbind(pitchers,
read_csv(paste0("Pitch Level Data/Pitcher Comps 2022/",files[i])))
}
add <- stats_2022 %>%
select(player_id, woba)
pitchers <- pitchers %>%
left_join(add, by = c("pitcher...8" = "player_id")) %>%
mutate(ID = case_when(woba > 0.330 ~ "Bad",
woba < 0.280 ~ "Great",
TRUE ~ "Decent"),
win_exp_added = case_when(inning_topbot == "Bot"  ~ -delta_home_win_exp,
inning_topbot == "Top"  ~ delta_home_win_exp),
run_exp_added = -delta_run_exp,
ra_on_play = post_bat_score - bat_score) %>%
rename(player_id = pitcher...8,
hitter = stand,
pitch_speed = release_speed) %>%
select(ID, player_name, player_id, game_date, pitch_type, pitch_name,
pitch_speed, spin_axis, pfx_x:plate_z, ra_on_play,
release_pos_x, release_pos_z, bb_type:strikes, pitch_number,
hitter, home_team:type, outs_when_up, inning, ra_on_play,
run_exp_added, win_exp_added,
sz_top, sz_bot, hit_distance_sc:release_extension,
estimated_ba_using_speedangle:woba_value, at_bat_number,
description, events, des, on_3b:on_1b, outs_when_up, zone) %>%
mutate(pitch_name = str_replace(pitch_name, "4-Seam Fastball", "4-Seam"))
# Making Pitcher Comparions ####
comps_2022 <- stats_2022 %>%
left_join(filter(arsenal_speed, pitch_type == "FF"), c("player_id" = "pitcher")) %>%
select(first_name, last_name, player_id, woba, pitch_speed) %>%
rename(FF_speed = pitch_speed) %>%
arrange(woba)
p10 <- quantile(comps_2022$woba, probs = 0.9)
p50 <- quantile(comps_2022$woba, probs = 0.5)
p90 <- quantile(comps_2022$woba, probs = 0.1)
pitchers_10 <- comps_2022 %>%
filter(woba > p10 - 0.010 & woba < p10 + 0.010,
FF_speed > 93 & FF_speed < 95) %>%
mutate(ID = "Bad")
pitchers_50 <- comps_2022 %>%
filter(woba > p50 - 0.010 & woba < p50 + 0.010,
FF_speed > 93 & FF_speed < 95) %>%
mutate(ID = "Decent")
pitchers_90 <- comps_2022 %>%
filter(woba > p90 - 0.010 & woba < p90 + 0.010,
FF_speed > 93.5 & FF_speed < 94.5) %>%
mutate(ID = "Great")
candidates <- rbind(pitchers_10, pitchers_50, pitchers_90)
sample <- candidates %>%
filter(player_id %in% c("641745", "621244", "680686",
"677651", "641154", "592791",
"668678", "453286", "666201"))
# Bases Empty Dataset ####
files <- list.files("Pitch Level Data/Pitcher Comps 2022/")
p <- read_csv(paste0("Pitch Level Data/Pitcher Comps 2022/", files[1]))
for(i in 2:length(files)) {
p <- rbind(p,
read_csv(paste0("Pitch Level Data/Pitcher Comps 2022/",files[i])))
}
add <- stats_2022 %>%
select(player_id, woba)
p <- p %>%
left_join(add, by = c("pitcher...8" = "player_id")) %>%
mutate(ID = case_when(woba > 0.330 ~ "Bad",
woba < 0.280 ~ "Great",
TRUE ~ "Decent"),
win_exp_added = case_when(inning_topbot == "Bot"  ~ -delta_home_win_exp,
inning_topbot == "Top"  ~ delta_home_win_exp),
run_exp_added = -delta_run_exp,
ra_on_play = post_bat_score - bat_score) %>%
rename(player_id = pitcher...8,
hitter = stand,
pitch_speed = release_speed)
empty <- p %>%
filter(is.na(on_3b) & is.na(on_2b) & is.na(on_1b)) %>%
select(ID, player_name, player_id, game_date, pitch_type, pitch_name,
pitch_speed, spin_axis, pfx_x:plate_z, ra_on_play,
release_pos_x, release_pos_z, bb_type:strikes, pitch_number,
hitter, home_team:type, outs_when_up, inning, ra_on_play,
run_exp_added, win_exp_added,
sz_top, sz_bot, hit_distance_sc:release_extension,
estimated_ba_using_speedangle:woba_value, at_bat_number) %>%
mutate(pitch_name = str_replace(pitch_name, "4-Seam Fastball", "4-Seam"))
# LHP Pitch Data (35 Pitchers) ####
files2 <- list.files("Pitch Level Data/LHP Data/")
pitchers2 <- read_csv(paste0("Pitch Level Data/LHP Data/", files2[1]))
for(i in 2:length(files2)) {
pitchers2 <- rbind(pitchers2,
read_csv(paste0("Pitch Level Data/LHP Data/",files2[i])))
}
add2 <- stats_2022 %>%
select(player_id, woba)
pitchers2 <- pitchers2 %>%
left_join(add2, by = c("pitcher...8" = "player_id")) %>%
mutate(win_exp_added = case_when(inning_topbot == "Bot"  ~ -delta_home_win_exp,
inning_topbot == "Top"  ~ delta_home_win_exp),
run_exp_added = -delta_run_exp,
ra_on_play = post_bat_score - bat_score) %>%
rename(player_id = pitcher...8,
hitter = stand,
pitch_speed = release_speed) %>%
select(woba, player_name, player_id, game_date, pitch_type, pitch_name,
pitch_speed, spin_axis, pfx_x:plate_z, ra_on_play,
release_pos_x, release_pos_z, bb_type:strikes, pitch_number,
hitter, home_team:type, outs_when_up, inning, ra_on_play,
run_exp_added, win_exp_added,
sz_top, sz_bot, hit_distance_sc:release_extension,
estimated_ba_using_speedangle:woba_value, at_bat_number,
description, events, des, on_3b:on_1b, outs_when_up, zone) %>%
mutate(pitch_name = str_replace(pitch_name, "4-Seam Fastball", "4-Seam"))
pitchers2 <- pitchers2 %>%
mutate(speed_change = pitch_speed - mean(pitch_speed),
.by = c(pitch_type, game_date, player_id) ) %>%
mutate(pfx_total = sqrt(pfx_x^2 + pfx_z^2)) %>%
mutate(break_change = pfx_total - mean(pfx_total),
.by = c(pitch_type, game_date, player_id) ) %>%
mutate(distance = sqrt(plate_x^2 + (plate_z - (sz_top - sz_bot)/2)^2)) %>%
mutate(
on_3b = case_when(
on_3b > 0 ~ 1,
TRUE ~ 0),
on_2b = case_when(
on_2b > 0 ~ 1,
TRUE ~ 0),
on_1b = case_when(
on_1b > 0 ~ 1,
TRUE ~ 0)
) %>%
mutate(base_out = paste0(outs_when_up, "_", on_1b, on_2b, on_3b)) %>%
select(-home_team, -away_team)
# CSV Exports ####
# Pitch Arsenal CSV
write.csv(arsenal, "arsenal.csv")
# Pitcher Seasonal Stats CSV
write.csv(stats_2022, "season_stats.csv")
# Pitch-by-Pitch "Pitchers" CSV
write.csv(pitchers, "pitcher_comps.csv")
# Bases Empty CSV
write.csv(empty, "bases_empty.csv")
# Pitch-by-Pitch Lefties CSV
write.csv(pitchers2, "lhp_pitches.csv")
View(pitchers2)
setwd("~/Downloads/Fall 2023/SABR Research/Research")
library(tidyverse)
library(readxl)
library(knitr)
library(ranger)
library(glmnet)
library(forcats)
library(olsrr)
library(Metrics)
library(mgcv)
library(caret)
# Geom Zone (Jackie's) ####
geom_zone <- function(top = 11/3, bottom = 3/2, linecolor = "black"){
geom_rect(xmin = -.7083, xmax = .7083, ymin = bottom, ymax = top,
alpha = 0, color = linecolor, linewidth = 0.75)
}
# c(0, 0, -.25, -.5, -.25))
geom_plate <- function(pov = "pitcher"){
df <- case_when(
pov == "pitcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, .25, .5, .25)),
pov == "catcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, -.25, -.5, -.25))
)
g <- geom_polygon(data = df, aes(x = x, y = y), fill = "white", color = "black", linewidth = 1.25)
g
}
LHP <- read_csv("CSVs/lhp_pitches.csv") %>%
select(-...1) %>%
filter(!is.na(pitch_type)) %>%
mutate(pitch_type = str_replace(pitch_type, "CS", "CU"),
pitch_name = str_replace(pitch_name, "Slow Curve", "Curveball"),
pitch_type = str_replace(pitch_type, "KC", "CU"),
pitch_name = str_replace(pitch_name, "Knuckle Curve", "Curveball"))
whiff <- LHP %>%
mutate(whiff = description == "swinging_strike",
whiff = as.character(whiff)) %>%
filter(pitch_type != "NA",
pitch_type != "PO")
# Pitch Speed
whiff %>%
ggplot(aes(y = whiff, x = pitch_speed, color = pitch_name)) +
geom_violin() +
geom_boxplot(alpha = 0.5, width = 0.5) +
facet_wrap(~pitch_name) +
labs(title = "Whiff vs. Non-Whiff by Pitch Speed",
x = "Pitch Speed (mph)",
y = "Outcome",
color = "Pitch Type") +
NULL
# Horizontal Movement
whiff %>%
ggplot(aes(y = whiff, x = pfx_x*12, color = pitch_name)) +
geom_violin() +
geom_boxplot(alpha = 0.5, width = 0.5) +
facet_wrap(~pitch_name) +
labs(title = "Whiff vs. Non-Whiff by Horizontal Movement",
x = "Horizontal Movement (in.)",
y = "Outcome",
color = "Pitch Type") +
NULL
# Vertical Movement
whiff %>%
ggplot(aes(y = whiff, x = pfx_z*12, color = pitch_name)) +
geom_violin() +
geom_boxplot(alpha = 0.5, width = 0.5) +
facet_wrap(~pitch_name) +
labs(title = "Whiff vs. Non-Whiff by Vertical Movement",
x = "Induced Vertical Movement (in.)",
y = "Outcome",
color = "Pitch Type") +
NULL
# Horizontal Pitch Location
whiff %>%
ggplot(aes(y = whiff, x = plate_x, color = pitch_name)) +
geom_violin() +
geom_boxplot(alpha = 0.5, width = 0.5) +
facet_wrap(~pitch_name) +
labs(title = "Whiff vs. Non-Whiff by Horizontal Pitch Location",
x = "Horizontal Pitch Location (ft)",
y = "Outcome",
color = "Pitch Type") +
NULL
# Vertical Pitch Location
whiff %>%
ggplot(aes(y = whiff, x = plate_z, color = pitch_name)) +
geom_violin() +
geom_boxplot(alpha = 0.5, width = 0.5) +
facet_wrap(~pitch_name) +
labs(title = "Whiff vs. Non-Whiff by Vertical Pitch Location",
x = "Vertical Pitch Location (ft)",
y = "Outcome",
color = "Pitch Type") +
NULL
# Spin Rate
whiff %>%
ggplot(aes(y = whiff, x = release_spin_rate, color = pitch_name)) +
geom_violin() +
geom_boxplot(alpha = 0.5, width = 0.5) +
facet_wrap(~pitch_name) +
labs(title = "Whiff vs. Non-Whiff by Spin Rate",
x = "Spin Rate (rpm)",
y = "Outcome",
color = "Pitch Type") +
NULL
# Slider Logistic Model
whiff_sl <- whiff %>%
filter(pitch_type == "SL") %>%
mutate(whiff = str_replace(whiff, "TRUE", "1"),
whiff = str_replace(whiff, "FALSE", "0"),
whiff = as.numeric(whiff))
# Original Model
model1 <- glm(whiff ~ pitch_speed + spin_axis + pfx_x + pfx_z + plate_x + plate_z +
release_spin_rate + speed_change + break_change + pfx_total + distance,
data = whiff_sl, family = binomial)
# Reduced Model
model1 <- glm(whiff ~ pitch_speed + plate_x + plate_z +
release_spin_rate + speed_change + break_change + pfx_total + distance,
data = whiff_sl)
summary(model1)
preds <- whiff_sl %>%
mutate(prediction_log = predict(model1, whiff_sl),
prediction = 1 / (1 + exp(-prediction_log)),
rounded_pred = case_when(
prediction >= 0.5 ~ 1,
prediction < 0.5 ~ 0
)) %>%
filter(!is.na(prediction))
preds %>%
ggplot(aes(x = as.character(whiff), y = prediction)) +
geom_boxplot() +
geom_jitter(alpha = 0.1, width = 0.1, height = 0)
preds %>%
mutate(prediction = round(prediction, 2)) %>%
group_by(prediction) %>%
summarize(mean(whiff)) %>%
as.data.frame() %>%
ggplot(aes(x = prediction, y = `mean(whiff)`)) +
geom_point() +
geom_smooth(se = FALSE) +
labs(y = "observed whiff proportion",
x = "projected % whiff chance",
title = "Whiff proportion by predicted whiff value",
subtitle = "Whiff predictions have a 1% bin width")
whiff %>%
mutate(count = paste0(balls, "-", strikes)) %>%
filter(pitch_type == "SL") %>%
ggplot(aes(y = whiff, x = pfx_z*12)) +
geom_violin() +
geom_boxplot(alpha = 0.5, width = 0.5) +
facet_wrap(~count) +
labs(title = "Whiff vs. Non-Whiff by Vertical Movement",
x = "Induced Vertical Movement (in.)",
y = "Outcome") +
NULL
# Sliders
whiff %>%
filter(pitch_type =="SL") %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_density_2d_filled(contour_var = "density", alpha = 0.5) +
geom_zone() +
# geom_point(alpha = 0.2) +
coord_fixed() +
facet_grid(cols = vars(hitter), rows = vars(whiff)) +
theme_bw()
# Fastballs
whiff %>%
filter(pitch_type =="FF") %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_density_2d_filled(contour_var = "density", alpha = 0.5) +
geom_zone() +
# geom_point(alpha = 0.2) +
coord_fixed() +
facet_grid(cols = vars(hitter), rows = vars(whiff)) +
theme_bw()
# Change-Ups
whiff %>%
filter(pitch_type =="CH") %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_density_2d_filled(contour_var = "density", alpha = 0.5) +
geom_zone() +
# geom_point(alpha = 0.2) +
coord_fixed() +
facet_grid(cols = vars(hitter), rows = vars(whiff)) +
theme_bw()
whiff %>%
arrange(game_date, player_name, at_bat_number, pitch_number) %>%
mutate(prev_pitch = lag(pitch_type, n = 1, default = NA)) %>%
filter(hitter == "R",
pitch_type == "SL",
prev_pitch  %in% c("FF", "CH", "SL", "CU"),
player_name == "Fried, Max") %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_density_2d_filled(contour_var = "density", alpha = 0.5) +
geom_zone() +
coord_fixed() +
facet_grid(cols = vars(prev_pitch), rows = vars(whiff)) +
theme_bw()
whiff %>%
arrange(game_date, player_name, at_bat_number, pitch_number) %>%
mutate(prev_pitch = lag(pitch_type, n = 1, default = NA)) %>%
filter(hitter == "R",
pitch_type == "FF") %>%
ggplot(aes(x = -plate_x, y = plate_z)) +
geom_density_2d_filled(contour_var = "density", alpha = 0.5) +
geom_zone() +
coord_fixed() +
facet_grid(cols = vars(player_name), rows = vars(whiff)) +
theme_bw()
zoned <- whiff %>%
mutate(loc_x = round(plate_x*3, 0),
loc_y = round(plate_z*3, 0))
zoned %>%
filter(pitch_type == "FF",
plate_z > 0 & plate_z < 6,
plate_x > -1.5 & plate_x < 1.5) %>%
summarize(whiff_perc = mean(whiff == "TRUE"),
pitches = n(),
.by = c(loc_x, loc_y, player_name)) %>%
filter(pitches >= 10) %>%
ggplot(aes(x = -loc_x, y = loc_y, fill = whiff_perc)) +
geom_tile() +
scale_fill_gradient(low = "gray", high = "red") +
facet_wrap(~ player_name) +
coord_fixed() +
theme_bw()
LHP2 <- LHP %>%
mutate(wOBAr = case_when(
woba >= 0.360 ~ 6,
woba >= 0.335 ~ 5,
woba >= 0.310 ~ 4,
woba >= 0.285 ~ 3,
woba >= 0.260 ~ 2,
woba >= 0.235 ~ 1)) %>%
mutate(wOBAr = as.factor(wOBAr))
LHP2 %>%
ggplot(aes(x = wOBAr, pitch_speed, color = wOBAr)) +
geom_boxplot() +
facet_wrap(~ pitch_name)
LHP %>%
ggplot(aes(x = plate_x, y = plate_z, color = zone)) +
geom_zone +
geom_point
LHP %>%
ggplot(aes(x = plate_x, y = plate_z, color = zone)) +
geom_zone +
geom_point()
LHP %>%
ggplot(aes(x = plate_x, y = plate_z, color = zone)) +
geom_zone() +
geom_point()
LHP %>%
ggplot(aes(x = plate_x, y = plate_z, color = as.factor(zone))) +
geom_zone() +
geom_point()
LHP %>%
filter(zone > 14) %>%
ggplot(aes(x = plate_x, y = plate_z, color = as.factor(zone))) +
geom_zone() +
geom_point()
LHP %>%
filter(zone > 9) %>%
ggplot(aes(x = plate_x, y = plate_z, color = as.factor(zone))) +
geom_zone() +
geom_point()
LHP %>%
filter(zone == 10) %>%
ggplot(aes(x = plate_x, y = plate_z, color = as.factor(zone))) +
geom_zone() +
geom_point()
LHP %>%
filter(zone == 10) %>%
ggplot(aes(x = plate_x, y = plate_z, color = as.factor(zone))) +
geom_zone() +
geom_point()
LHP$zone %>% unique
LHP %>%
filter(zone == 10) %>%
ggplot(aes(x = plate_x, y = plate_z, color = as.factor(zone))) +
geom_zone() +
geom_point()
LHP %>%
ggplot(aes(x = plate_x, y = plate_z, color = as.factor(zone))) +
geom_zone() +
geom_point()
View(LHP)
View(data)
LHP2 %>%
ggplot(aes(x = woba, pitch_speed, color = wOBAr)) +
geom_point() +
facet_wrap(~ pitch_name)
LHP2 %>%
ggplot(aes(x = woba, pitch_speed)) +
geom_point() +
facet_wrap(~ pitch_name)
LHP2 %>%
filter(pitch_type == "SL") +
ggplot(aes(x = woba, pitch_speed)) +
geom_point() +
# facet_wrap(~ pitch_name)
```
LHP2 %>%
filter(pitch_type == "SL") +
ggplot(aes(x = woba, pitch_speed)) +
geom_point()
LHP2 %>%
filter(pitch_type == "SL") %>%
ggplot(aes(x = woba, pitch_speed)) +
geom_point()
View(LHP)
LHP2 %>%
filter(pitch_type == "SL") %>%
ggplot(aes(x = estimated_woba_using_speedanglex, pitch_speed)) +
geom_point()
LHP2 %>%
filter(pitch_type == "SL") %>%
ggplot(aes(x = estimated_woba_using_speedangle, pitch_speed)) +
geom_point()
LHP2 %>%
ggplot(aes(x = estimated_woba_using_speedangle, pitch_speed)) +
geom_point() +
facet_wrap(~ pitch_name)
LHP2 %>%
ggplot(aes(x = estimated_woba_using_speedangle, pitch_speed)) +
geom_point(alpha = 0.2) +
facet_wrap(~ pitch_name)
