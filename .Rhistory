# RHP Pitch Data (85 Pitchers) ####
files3 <- list.files("Pitch Level Data/RHP Data/")
pitchers3 <- read_csv(paste0("Pitch Level Data/RHP Data/", files3[1]))
for(i in 2:length(files3)) {
pitchers3 <- rbind(pitchers3,
read_csv(paste0("Pitch Level Data/RHP Data/",files3[i])))
}
add3 <- stats_2022 %>%
select(player_id, woba)
pitchers3 <- pitchers3 %>%
left_join(add3, by = c("pitcher...8" = "player_id")) %>%
mutate(win_exp_added = case_when(inning_topbot == "Bot"  ~ -delta_home_win_exp,
inning_topbot == "Top"  ~ delta_home_win_exp),
run_exp_added = -delta_run_exp,
ra_on_play = post_bat_score - bat_score) %>%
rename(player_id = pitcher...8,
hitter = stand,
pitch_speed = release_speed) %>%
select(woba, player_name, player_id, p_throws, game_date, pitch_type, pitch_name,
pitch_speed, spin_axis, pfx_x:plate_z, ra_on_play,
release_pos_x, release_pos_z, bb_type:strikes, pitch_number,
hitter, home_team:type, outs_when_up, inning, ra_on_play,
run_exp_added, win_exp_added,
sz_top, sz_bot, hit_distance_sc:release_extension,
estimated_ba_using_speedangle:woba_value, at_bat_number,
description, events, des, on_3b:on_1b, outs_when_up, zone, batter) %>%
mutate(pitch_name = str_replace(pitch_name, "4-Seam Fastball", "4-Seam"))
pitchers3 <- pitchers3 %>%
mutate(speed_change = pitch_speed - mean(pitch_speed),
.by = c(pitch_type, game_date, player_id) ) %>%
mutate(pfx_total = sqrt(pfx_x^2 + pfx_z^2)) %>%
mutate(break_change = pfx_total - mean(pfx_total),
.by = c(pitch_type, game_date, player_id) ) %>%
mutate(distance = sqrt(plate_x^2 + (plate_z - (sz_top - sz_bot)/2)^2)) %>%
mutate(
on_3b = case_when(
on_3b > 0 ~ 1,
TRUE ~ 0),
on_2b = case_when(
on_2b > 0 ~ 1,
TRUE ~ 0),
on_1b = case_when(
on_1b > 0 ~ 1,
TRUE ~ 0)
) %>%
mutate(base_out = paste0(outs_when_up, "_", on_1b, on_2b, on_3b)) %>%
select(-home_team, -away_team)
pitchers3_overview <- pitchers3 %>%
filter(pitch_type  %in% c("FF", "SI", "FC")) %>%
group_by(player_id, pitch_type) %>%
summarize(Pitches = n()) %>%
pivot_wider(names_from = pitch_type, values_from = Pitches)
pitchers3_overview <- pitchers3_overview %>%
replace(is.na(pitchers3_overview), 0) %>%
mutate(fb_type = case_when(FF >= SI & FF >= FC ~ "FF",
SI > FF & SI >= FC ~ "SI",
FC > FF & FC > SI ~ "FC")) %>%
select(player_id, fb_type)
pitchers3 <- pitchers3 %>%
left_join(pitchers3_overview, by = c("player_id" = "player_id"))
pitchers3_fb <- pitchers3 %>%
filter(pitch_type  == fb_type) %>%
summarize(fb_v = mean(pfx_z),
fb_h = mean(pfx_x),
.by = c(game_date, player_id))
pitchers3 <- pitchers3 %>%
left_join(pitchers3_fb, by = c("game_date" = "game_date",
"player_id" = "player_id")) %>%
mutate(tunnel_z = plate_z - pfx_z + fb_v,
tunnel_x = plate_x - pfx_x + fb_h) %>%
mutate(whiff = description == "swinging_strike",
whiff = as.character(whiff)) %>%
filter(pitch_type != "NA",
pitch_type != "PO")
pitchers3_diffs <- pitchers3 %>%
filter(pitch_type == fb_type) %>%
group_by(player_id, game_date) %>%
summarize(speed = mean(pitch_speed),
horz = mean(pfx_x),
ivb = mean(pfx_z))
pitchers3 <- pitchers3 %>%
left_join(pitchers3_diffs, by = c("game_date" = "game_date",
"player_id" = "player_id")) %>%
mutate(speed_fb_diff = pitch_speed - speed,
pfx_x_fb_diff = pfx_x - horz,
pfx_z_fb_diff = pfx_z - ivb) %>%
select(-speed, -horz, -ivb)
# All Pitch Data (121 Pitchers) ####
pitchers4 <- rbind(pitchers2, pitchers3) %>%
as.data.frame() %>%
arrange(player_id)
# Batter Data
# URL: https://baseballsavant.mlb.com/leaderboard/custom?year=2022&type=batter&filter=&sort=4&sortDir=desc&min=10&selections=pa,hit,home_run,k_percent,bb_percent,batting_avg,slg_percent,on_base_percent,on_base_plus_slg,r_total_stolen_base,woba,xwoba,exit_velocity_avg,sweet_spot_percent,barrel_batted_rate,solidcontact_percent,flareburner_percent,poorlyunder_percent,poorlytopped_percent,poorlyweak_percent,hard_hit_percent,&chart=false&x=pa&y=pa&r=no&chartType=beeswarm
# Downloaded: December 29, 2023
# batters <- read_csv("~/Downloads/Research/Research/CSVs/batter_stats.csv") %>%
#   rename(batter_name = `last_name, first_name`,
#          batter_id = player_id,
#          PA = pa, H = hit, HR = home_run,
#          AVG = batting_avg,
#          SLG = slg_percent,
#          OBP = on_base_percent,
#          OPS = on_base_plus_slg,
#          xwOBA = xwoba,
#          wOBA = woba,
#          SB = r_total_stolen_base,
#          EV = exit_velocity_avg,
#          barrel_rate = barrel_batted_rate) %>%
#   select(-year, -`...25`)
# CSV Exports ####
# Pitch Arsenal CSV
write.csv(arsenal, "arsenal.csv")
# Pitcher Seasonal Stats CSV
write.csv(stats_2022, "season_stats.csv")
# Pitch-by-Pitch "Pitchers" CSV
write.csv(pitchers, "pitcher_comps.csv")
# Bases Empty CSV
write.csv(empty, "bases_empty.csv")
# Pitch-by-Pitch Lefties CSV
write.csv(pitchers2, "lhp_pitches.csv")
# Pitch-by-Pitch Righties CSV
write.csv(pitchers3, "rhp_pitches.csv")
# Pitch-by-Pitch All CSV
write.csv(pitchers4, "all_pitches.csv")
# Batter Stats
write.csv(batters, "batter_stats.csv")
View(pitchers3)
setwd("~/Downloads/Research/Research")
library(tidyverse)
library(tidyverse)
library(knitr)
library(glmnet)
library(tidyverse)
library(knitr)
library(glmnet)
library(patchwork)
library(olsrr)
geom_zone <- function(top = 11/3, bottom = 3/2, linecolor = "black"){
geom_rect(xmin = -.7083, xmax = .7083, ymin = bottom, ymax = top,
alpha = 0, color = linecolor, linewidth = 0.75)
}
geom_plate <- function(pov = "pitcher"){
df <- case_when(
pov == "pitcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, .25, .5, .25)),
pov == "catcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, -.25, -.5, -.25))
)
g <- geom_polygon(data = df, aes(x = x, y = y), fill = "white", color = "black", linewidth = 1.25)
g
}
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1) %>%
filter(!is.na(pfx_z)) %>%
mutate(distance_sweet = sqrt(((plate_x - 0.85)^2)+((plate_z - 1.55)^2))) %>%
mutate(zone = case_when(distance < 2 ~ zone,
distance >= 2 & plate_z > (sz_top + sz_bot)/2 ~ 16,
distance >= 2 & plate_z <= (sz_top + sz_bot)/2 ~ 17)) %>%
mutate(ab_id = paste0(game_date, "_", player_id, "_", at_bat_number),
prev_ab_id = lead(ab_id, 1)) %>%
mutate(prev_pitch = ifelse(ab_id == prev_ab_id, lead(pitch_type, 1), NA)) %>%
select(-ab_id, -prev_ab_id) %>%
mutate(prev_pitch = case_when(prev_pitch  %in% c("FF", "FC", "SI") ~ "Fastball",
prev_pitch %in% c("SL", "CU", "KC",
"SV", "ST", "CS") ~ "Breaking Ball",
prev_pitch  %in% c("CH", "FS") ~ "Off Speed"))
rhp <- rhp %>%
mutate(prev_pitch = ifelse(is.na(prev_pitch), "None", prev_pitch))
rhp_fb <- rhp %>%
filter(pitch_type == fb_type) %>%
summarize(fb_z = mean(pfx_z),
fb_x = mean(pfx_x),
fb_mph = mean(pitch_speed),
.by = c(game_date, player_id))
rhp <- rhp %>%
left_join(rhp_fb, by = c("game_date" = "game_date",
"player_id" = "player_id"))
rhp <- rhp %>%
mutate(pfx_x_diff = (fb_x - pfx_x),
pfx_z_diff = (fb_z = pfx_z),
speed_ff_diff = (fb_mph - pitch_speed))
sliders <- rhp %>%
filter(hitter == "R") %>%
filter(pitch_type == "SL") %>%
mutate(count = paste0(balls, "_", strikes),
prev_pitch = as.factor(prev_pitch)) %>%
mutate(prev_pitch_ff = ifelse(prev_pitch == "FF", 1, 0))
fastballs <- rhp %>%
filter(hitter == "R") %>%
filter(pitch_type == "FF") %>%
mutate(count = paste0(balls, "_", strikes),
prev_pitch = as.factor(prev_pitch))
View(rhp)
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1) %>%
filter(!is.na(pfx_z)) %>%
mutate(distance_sweet = sqrt(((plate_x - 0.85)^2)+((plate_z - 1.55)^2))) %>%
mutate(zone = case_when(distance < 2 ~ zone,
distance >= 2 & plate_z > (sz_top + sz_bot)/2 ~ 16,
distance >= 2 & plate_z <= (sz_top + sz_bot)/2 ~ 17)) %>%
mutate(ab_id = paste0(game_date, "_", player_id, "_", at_bat_number),
prev_ab_id = lead(ab_id, 1)) %>%
mutate(prev_pitch = ifelse(ab_id == prev_ab_id, lead(pitch_type, 1), NA)) %>%
select(-ab_id, -prev_ab_id) %>%
mutate(prev_pitch = case_when(prev_pitch  %in% c("FF", "FC", "SI") ~ "Fastball",
prev_pitch %in% c("SL", "CU", "KC",
"SV", "ST", "CS") ~ "Breaking Ball",
prev_pitch  %in% c("CH", "FS") ~ "Off Speed"))
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1) %>%
filter(!is.na(pfx_z)) %>%
mutate(distance_sweet = sqrt(((plate_x - 0.85)^2)+((plate_z - 1.55)^2))) %>%
mutate(zone = case_when(distance < 2 ~ zone,
distance >= 2 & plate_z > (sz_top + sz_bot)/2 ~ 16,
distance >= 2 & plate_z <= (sz_top + sz_bot)/2 ~ 17)) %>%
mutate(ab_id = paste0(game_date, "_", player_id, "_", at_bat_number),
prev_ab_id = lead(ab_id, 1)) %>%
mutate(prev_pitch = ifelse(ab_id == prev_ab_id, lead(pitch_type, 1), NA)) %>%
select(-ab_id, -prev_ab_id) %>%
mutate(prev_pitch = case_when(prev_pitch  %in% c("FF", "FC", "SI") ~ "Fastball",
prev_pitch %in% c("SL", "CU", "KC",
"SV", "ST", "CS") ~ "Breaking Ball",
prev_pitch  %in% c("CH", "FS") ~ "Off Speed"))
rhp <- rhp %>%
mutate(prev_pitch = ifelse(is.na(prev_pitch), "None", prev_pitch))
sliders <- rhp %>%
filter(hitter == "R") %>%
filter(pitch_type == "SL") %>%
mutate(count = paste0(balls, "_", strikes),
prev_pitch = as.factor(prev_pitch)) %>%
mutate(prev_pitch_ff = ifelse(prev_pitch == "FF", 1, 0))
fastballs <- rhp %>%
filter(hitter == "R") %>%
filter(pitch_type == "FF") %>%
mutate(count = paste0(balls, "_", strikes),
prev_pitch = as.factor(prev_pitch))
# Initial Model
sl_model_all <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
balls + strikes + pfx_total + speed_change + break_change + distance +
prev_pitch +
speed_fb_diff + pfx_x_fb_diff, pfx_z_fb_diff,
data = sliders, family = binomial)
# Initial Model
sl_model_all <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
balls + strikes + pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff,
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_all)
# Initial Model
sl_model_all <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
balls + strikes + pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff +
speed_change*speed_change + break_change*break_change +
distance*distance + speed_fb_diff*speed_fb_diff +
pfx_x_fb_diff*pfx_x_fb_diff + pfx_z_fb_diff* pfx_z_fb_diff,
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_all)
# Initial Model
sl_model_all <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
balls + strikes + pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff +
speed_change^2 + break_change^2 +
distance*distance + speed_fb_diff*speed_fb_diff +
pfx_x_fb_diff*pfx_x_fb_diff + pfx_z_fb_diff* pfx_z_fb_diff,
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_all)
# Initial Model
sl_model_all <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
balls + strikes + pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff +
speed_change*speed_change + break_change*break_change +
distance*distance + speed_fb_diff*speed_fb_diff +
pfx_x_fb_diff*pfx_x_fb_diff + pfx_z_fb_diff* pfx_z_fb_diff,
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_all)
# Initial Model
sl_model_all <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
balls + strikes + pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff +
speed_change^2 + break_change^2 + distance^2 +
speed_fb_diff^2 + pfx_x_fb_diff^2 + pfx_z_fb_diff^2,
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_all)
# Initial Model
sl_model_all <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
balls + strikes + pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff +
(speed_change^2) + break_change^2 + distance^2 +
speed_fb_diff^2 + pfx_x_fb_diff^2 + pfx_z_fb_diff^2,
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_all)
# Initial Model
sl_model_all <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
balls + strikes + pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff +
speed_change^2 + break_change^2 + distance^2 +
speed_fb_diff^2 + pfx_x_fb_diff^2 + pfx_z_fb_diff^2,
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_all)
rhp <- rhp %>%
mutate(prev_pitch = ifelse(is.na(prev_pitch), "None", prev_pitch)) %>%
mutate(Count = paste0(balls, "-", strikes)) %>%
mutate(Count = as.factor(Count))
sliders <- rhp %>%
filter(hitter == "R") %>%
filter(pitch_type == "SL") %>%
mutate(count = paste0(balls, "_", strikes),
prev_pitch = as.factor(prev_pitch)) %>%
mutate(prev_pitch_ff = ifelse(prev_pitch == "FF", 1, 0))
fastballs <- rhp %>%
filter(hitter == "R") %>%
filter(pitch_type == "FF") %>%
mutate(count = paste0(balls, "_", strikes),
prev_pitch = as.factor(prev_pitch))
# Initial Model
sl_model_all <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
count + pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff +
speed_change^2 + break_change^2 + distance^2 +
speed_fb_diff^2 + pfx_x_fb_diff^2 + pfx_z_fb_diff^2,
data = sliders, family = binomial)
# Model Evaluation
summary(sl_model_all)
sl_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff +
speed_change^2 + break_change^2 + distance^2 +
speed_fb_diff^2 + pfx_x_fb_diff^2 + pfx_z_fb_diff^2,
data = sliders, family = binomial)
sl_model %>% summary
sl_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff +
speed_change^2 + break_change^2 + distance^2 +
speed_fb_diff^2 + pfx_x_fb_diff^2 + pfx_z_fb_diff^2,
data = sliders, family = binomial)
sl_model %>% summary
sl_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff +
speed_change^2 + break_change^2 + distance^2 +
speed_fb_diff^2,
data = sliders, family = binomial)
sl_model %>% summary
fastballs <- rhp %>%
filter(hitter == "R") %>%
filter(pitch_type == fb_type) %>%
mutate(count = paste0(balls, "_", strikes),
prev_pitch = as.factor(prev_pitch))
# Initial Model
fb_model_all <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
count + pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + pfx_x_fb_diff + pfx_z_fb_diff +
speed_change^2 + break_change^2 + distance^2 +
speed_fb_diff^2 + pfx_x_fb_diff^2 + pfx_z_fb_diff^2,
data = fastballsliders, family = binomial)
View(fastballs)
# Initial Model
fb_model_all <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
count + pfx_total + speed_change + break_change + distance +
prev_pitch + pitch_type +
speed_change^2 + break_change^2 + distance^2,
data = fastballs, family = binomial)
# Model Evaluation
summary(sl_model_all)
# Model Evaluation
summary(fb_model_all)
fb_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
count + pfx_total + speed_change + break_change + distance +
prev_pitch + pitch_type +
speed_change^2 + break_change^2 + distance^2,
data = fastballs, family = binomial)
fb_model %>% summary
fb_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change + distance +
pitch_type +
speed_change^2 + break_change^2 + distance^2,
data = fastballs, family = binomial)
fb_model %>% summary
fb_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change + distance +
pitch_type + plate_x^2 + plate_z^2 +
speed_change^2 + break_change^2 + distance^2,
data = fastballs, family = binomial)
fb_model %>% summary
fb_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change + distance +
pitch_type + I(plate_x^2) + I(plate_z^2) +
speed_change^2 + break_change^2 + distance^2,
data = fastballs, family = binomial)
fb_model %>% summary
fb_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change  +
pitch_type + I(plate_x^2) + I(plate_z^2) +
speed_change^2 + break_change^2 + distance^2,
data = fastballs, family = binomial)
fb_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change +
pitch_type + I(plate_x^2) + I(plate_z^2) +
speed_change^2 + break_change^2 + distance^2,
data = fastballs, family = binomial)
fb_model %>% summary
fb_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change +
pitch_type + I(plate_x^2) + I(plate_z^2) +
speed_change^2 + break_change^2 + distance^2,
data = fastballs, family = binomial)
fb_model %>% summary
fb_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change +
pitch_type + I(plate_x^2) + I(plate_z^2) +
speed_change^2 + break_change^2 + distance^2,
data = fastballs, family = binomial)
fb_model %>% summary
rm(fb_model)
fb_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change +
pitch_type + I(plate_x^2) + I(plate_z^2) +
speed_change^2 + break_change^2 + distance^2,
data = fastballs, family = binomial)
fb_model %>% summary
fb_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change +
pitch_type + I(plate_x^2) + I(plate_z^2),
data = fastballs, family = binomial)
fb_model %>% summary
sl_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + I(plate_x^2) + I(plate_z^2) +
speed_change^2 + break_change^2 + distance^2 +
speed_fb_diff^2,
data = sliders, family = binomial)
sl_model %>% summary
sl_model <- glm(whiff ~ pitch_speed + pfx_x + pfx_z + plate_x + plate_z + zone +
pfx_total + speed_change + break_change + distance +
prev_pitch + speed_fb_diff + I(plate_x^2) + I(plate_z^2),
data = sliders, family = binomial)
sl_model %>% summary
setwd("~/Downloads/Research/Research")
rhp <- read_csv("CSVs/rhp_pitches.csv")
library(tidyverse)
library(tidyverse)
library(knitr)
library(glmnet)
library(patchwork)
library(olsrr)
rhp <- read_csv("CSVs/rhp_pitches.csv")
View(rhp)
View(rhp)
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1) %>%
filter(!is.na(pfx_z)) %>%
mutate(distance_sweet = sqrt(((plate_x - 0.85)^2)+((plate_z - 1.55)^2))) %>%
mutate(zone = case_when(distance < 2 ~ zone,
distance >= 2 & plate_z > (sz_top + sz_bot)/2 ~ 16,
distance >= 2 & plate_z <= (sz_top + sz_bot)/2 ~ 17)) %>%
mutate(ab_id = paste0(game_date, "_", player_id, "_", at_bat_number),
prev_ab_id = lead(ab_id, 1)) %>%
mutate(prev_pitch = ifelse(ab_id == prev_ab_id, lead(pitch_type, 1), NA)) %>%
select(-ab_id, -prev_ab_id) %>%
mutate(prev_pitch = case_when(prev_pitch  %in% c("FF", "FC", "SI") ~ "Fastball",
prev_pitch %in% c("SL", "CU", "KC",
"SV", "ST", "CS") ~ "Breaking Ball",
prev_pitch  %in% c("CH", "FS") ~ "Off Speed")) %>%
mutate(zone = as.factor(zone))
setwd("~/Downloads/Research/Research")
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1) %>%
filter(!is.na(pfx_z)) %>%
mutate(distance_sweet = sqrt(((plate_x - 0.85)^2)+((plate_z - 1.55)^2))) %>%
mutate(zone = case_when(distance < 2 ~ zone,
distance >= 2 & plate_z > (sz_top + sz_bot)/2 ~ 16,
distance >= 2 & plate_z <= (sz_top + sz_bot)/2 ~ 17)) %>%
mutate(ab_id = paste0(game_date, "_", player_id, "_", at_bat_number),
prev_ab_id = lead(ab_id, 1)) %>%
mutate(prev_pitch = ifelse(ab_id == prev_ab_id, lead(pitch_type, 1), NA)) %>%
select(-ab_id, -prev_ab_id) %>%
mutate(prev_pitch = case_when(prev_pitch  %in% c("FF", "FC", "SI") ~ "Fastball",
prev_pitch %in% c("SL", "CU", "KC",
"SV", "ST", "CS") ~ "Breaking Ball",
prev_pitch  %in% c("CH", "FS") ~ "Off Speed")) %>%
mutate(zone = relevel(as.factor(zone), ref = 5))
library(tidyverse)
library(tidyverse)
library(knitr)
library(glmnet)
library(patchwork)
library(olsrr)
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1) %>%
filter(!is.na(pfx_z)) %>%
mutate(distance_sweet = sqrt(((plate_x - 0.85)^2)+((plate_z - 1.55)^2))) %>%
mutate(zone = case_when(distance < 2 ~ zone,
distance >= 2 & plate_z > (sz_top + sz_bot)/2 ~ 16,
distance >= 2 & plate_z <= (sz_top + sz_bot)/2 ~ 17)) %>%
mutate(ab_id = paste0(game_date, "_", player_id, "_", at_bat_number),
prev_ab_id = lead(ab_id, 1)) %>%
mutate(prev_pitch = ifelse(ab_id == prev_ab_id, lead(pitch_type, 1), NA)) %>%
select(-ab_id, -prev_ab_id) %>%
mutate(prev_pitch = case_when(prev_pitch  %in% c("FF", "FC", "SI") ~ "Fastball",
prev_pitch %in% c("SL", "CU", "KC",
"SV", "ST", "CS") ~ "Breaking Ball",
prev_pitch  %in% c("CH", "FS") ~ "Off Speed")) %>%
mutate(zone = relevel(as.factor(zone), ref = 5))
View(rhp)
View(rhp)
