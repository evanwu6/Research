mutate(count = paste0(balls, "_", strikes),
prev_pitch = as.factor(prev_pitch)) %>%
mutate(prev_pitch_ff = ifelse(prev_pitch == "FF", 1, 0))
fastballs <- rhp %>%
filter(hitter == "R") %>%
filter(pitch_type == fb_type) %>%
mutate(count = paste0(balls, "_", strikes),
prev_pitch = as.factor(prev_pitch))
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1)
lhp <- read_csv("CSVs/lhp_pitches.csv") %>%
select(-...1)
data <- rbind(rhp, lhp)
data %>%
mutate(pitch_speed = round(pitch_speed, 0)) %>%
group_by(p_throws, hitter, pitch_type, pitch_speed) %>%
filter(!is.na(pfx_x)) %>%
filter(!is.na(pfx_z)) %>%
summarize(min_x = min(pfx_x), max_x = max(pfx_x),
min_z = min(pfx_z), max_z = max(pfx_z),
min_spin = min(release_spin_rate, na.rm = TRUE),
max_spin = max(release_spin_rate, na.rm = TRUE)) %>%
write.csv("Movement.csv")
View(sliders)
runApp()
View(sliders)
sliders %>% group_by(hitter) %>% summarize(mean(whiff))
rhp <- read_csv("CSVs/rhp_pitches.csv") %>%
select(-...1) %>%
filter(!is.na(pfx_z)) %>%
mutate(distance_sweet = sqrt(((plate_x - 0.85)^2)+((plate_z - 1.55)^2))) %>%
mutate(zone = case_when(distance < 2 ~ zone,
distance >= 2 & plate_z > (sz_top + sz_bot)/2 ~ 16,
distance >= 2 & plate_z <= (sz_top + sz_bot)/2 ~ 17)) %>%
mutate(ab_id = paste0(game_date, "_", player_id, "_", at_bat_number),
prev_ab_id = lead(ab_id, 1)) %>%
mutate(prev_pitch = ifelse(ab_id == prev_ab_id, lead(pitch_type, 1), NA)) %>%
select(-ab_id, -prev_ab_id) %>%
mutate(prev_pitch = case_when(prev_pitch  %in% c("FF", "FC", "SI") ~ "Fastball",
prev_pitch %in% c("SL", "CU", "KC",
"SV", "ST", "CS") ~ "Breaking Ball",
prev_pitch  %in% c("CH", "FS") ~ "Off Speed")) %>%
mutate(zone = relevel(as.factor(zone), ref = 5))
rhp %>% filter(pitch_type == "SL") %>% group_by(hitter) %>% summarize(mean(whiff))
runApp()
library(tidyverse)
library(patchwork)
library(knitr)
library(scales)
library(RColorBrewer)
library(lubridate)
library(kableExtra)
# Data
data <- read_csv("Data/AWAY_04_09.csv")
all_pitchers <- data %>%
filter(PitcherTeam == "ELO_PHO") %>%
select(Pitcher) %>%
unique() %>%
arrange(Pitcher)
all_pitchers
# Pitcher
pitcher <- "Wehner, Carson"
# Pitch Count
data <- data %>%
group_by(Pitcher) %>%
mutate(PitchCount = cumsum(Level == "D1")) %>%
ungroup()
# Tunnel
data_ff <- data %>%
filter(TaggedPitchType  %in% c("Fastball", "Sinker")) %>%
summarize(fb_h = mean(HorzBreak),
fb_v = mean(InducedVertBreak),
.by = Pitcher)
data <- data %>%
left_join(data_ff, by = c("Pitcher" = "Pitcher")) %>%
mutate(tunnel_horz = PlateLocSide - HorzBreak/12 + fb_h/12,
tunnel_vert = PlateLocHeight - InducedVertBreak/12 + fb_v/12)
# First Pitch
data <- data %>%
mutate(First = case_when(
Balls == 0 & Strikes == 0 ~ 1,
TRUE ~ 0
))
# Colors
palettes <- list(
"Normal" = c("#000000", "#E69F00", "#56B4E9", "#0072B2",
"#F0E442", "#009E73", "#D55E00", "#CC79A7"),
"Set1" = brewer.pal(9, "Set1"),
"Set2" = brewer.pal(8, "Set2"),
"Set3" = brewer.pal(12, "Set3"))
# ggplot Functions
geom_zone <- function(top = 11/3, bottom = 3/2, linecolor = "black"){
geom_rect(xmin = -.7083, xmax = .7083, ymin = bottom, ymax = top,
alpha = 0, color = linecolor, linewidth = 0.75)
}
geom_plate <- function(pov = "pitcher"){
df <- case_when(
pov == "pitcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, .25, .5, .25)),
pov == "catcher" ~
data.frame(x = c(-.7083, .7083, .7083 ,0, -.7083), y = c(0, 0, -.25, -.5, -.25)))
g <- geom_polygon(data = df, aes(x = x, y = y), fill = "white", color = "black", linewidth = 1)
g
}
scale_color_trackman <- function(colors = "normal"){
scale_color_manual(values = c("Fastball" = "black", "Cutter" = "purple",
"Sinker" = "red", "Slider" = "blue",
"ChangeUp" = "chartreuse3", "Curveball" = "darkorange"))
}
# Tilt Function
S2HM <- function(seconds) {
hours <- seconds %/% 3600
minutes <- (seconds %% 3600) %/% 60
minutes_str <- sprintf("%02d", minutes)  # Add leading zero if needed
return(paste0(hours, ":", minutes_str))
}
pc <- data %>%
filter(Pitcher == pitcher) %>%
nrow() %>%
as.numeric()
max_abs_x <- max(abs(data$PlateLocSide))
max_abs_y <- max(abs(data$PlateLocHeight))
# Create symmetric limits for x and y axes
x_lim <- c(-max_abs_x, max_abs_x)
y_lim <- c(-max_abs_y, max_abs_y)
data %>%
filter(Pitcher == pitcher) %>%
ggplot(aes(x = HorzBreak, y = InducedVertBreak)) +
geom_vline(xintercept = 0, color = "black", size = 0.5) +
geom_hline(yintercept = 0, color = "black", size = 0.5) +
geom_point(aes(color = TaggedPitchType), size = 0.5, alpha = 0.75) +
xlim(-max(abs(data$HorzBreak)), max(abs(data$HorzBreak))) +
ylim(-max(abs(data$InducedVertBreak)), max(abs(data$InducedVertBreak))) +
scale_color_trackman() +
coord_fixed() +
theme_classic() +
theme(axis.line = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_text(hjust = 0.5)) +
labs(color = "Pitch Type",
x = "Horizontal Break",
y = "Induced Vertical Break")
data %>%
mutate(Tilt2 = as.numeric(Tilt)) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType) %>%
rename(Pitch = TaggedPitchType) %>%
summarize("Min. Velo" = round(min(RelSpeed, na.rm = TRUE), 1),
"Avg. Velo" = round(mean(RelSpeed, na.rm = TRUE), 1),
"Max. Velo" = round(max(RelSpeed, na.rm = TRUE), 1),
"Avg. RPM" = round(mean(SpinRate, na.rm = TRUE), 0),
"Avg. VAA" = round(mean(VertApprAngle, na.rm = TRUE), 1),
"Min. Tilt" = S2HM(min(Tilt2, na.rm = TRUE)),
"Max. Tilt" = S2HM(max(Tilt2, na.rm = TRUE)),
"Min. IVB" = round(min(InducedVertBreak, na.rm = TRUE), 1),
"Avg. IVB" = round(mean(InducedVertBreak, na.rm = TRUE), 1),
"Max. IVB" = round(max(InducedVertBreak, na.rm = TRUE), 1),
"Min. Hor.B" = round(min(HorzBreak, na.rm = TRUE), 1),
"Avg. Hor.B" = round(mean(HorzBreak, na.rm = TRUE), 1),
"Max. Hor.B" = round(max(HorzBreak, na.rm = TRUE), 1)
) %>%
kable() %>%
kable_styling(full_width = TRUE)
data %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType) %>%
rename(Pitch = TaggedPitchType) %>%
summarize("Pitches" = n(),
"Pitch%" = n() / pc,
"Strikes Called" = sum(PitchCall == "StrikeCalled"),
"Balls Called" = sum(PitchCall == "BallCalled"),
"Strike Rate" = percent(sum(PitchCall %in%
c("StrikeCalled","StrikeSwinging",
"FoulBall", "InPlay"))/n()),
"Swing & Miss" = sum(PitchCall == "StrikeSwinging"),
"Swings" = sum(PitchCall %in%
c("StrikeSwinging", "FoulBall", "InPlay")),
"S&M %" = percent(sum(PitchCall == "StrikeSwinging")/
sum(PitchCall %in% c("StrikeSwinging",
"FoulBall", "InPlay"))),
"1st Pitch Strike" = paste(sum(PitchCall %in% c("StrikeSwinging",
"FoulBall", "InPlay") &
First == 1), "/", sum(First == 1))) %>%
mutate(`Pitch%` = paste0(round(`Pitch%`, 3)*100, "%")) %>%
kable() %>%
kable_styling(full_width = TRUE)
data %>%
filter(Pitcher == pitcher) %>%
mutate(PitchCount = row_number()) %>%
ggplot(aes(x = PitchCount, y = RelSpeed,
color = TaggedPitchType)) +
geom_point(alpha = 0.9) +
geom_smooth(se = FALSE) +
scale_color_trackman() +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(x = "Pitch Number",
y = "Pitch Speed",
color = "Pitch Type")
data %>%
filter(Pitcher == pitcher) %>%
ggplot(aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_plate() +
geom_zone() +
geom_point(aes(color = TaggedPitchType),
size = 1.75, alpha = 0.75) +
xlim(-2, 2) + ylim(0, 5) + coord_fixed() +
scale_color_trackman() +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(color = "Pitch Type")
data %>%
filter(Pitcher == pitcher) %>%
ggplot() +
coord_fixed() +
geom_rect(aes(xmin = -3, xmax = 3, ymin = 0, ymax = 0.675), fill = "#76552B", color = "#76552B") +
geom_curve(aes(x = -2.9675, y = 0.485, xend = 2.9675, yend = 0.485), size = 10, curvature = -0.10, color = "#76552B") +
geom_rect(aes(xmin = -0.75, xmax = 0.75, ymin = 0.9, ymax = 1.075), fill = "white", color = "black") +
geom_point(aes(x = -RelSide, y = RelHeight, color = TaggedPitchType),
size = 2, alpha = 0.75, shape = 1, show.legend = FALSE) +
scale_color_trackman() +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.y = element_blank(),
axis.title.x = element_blank()) +
labs(color = "Pitch Type")
data %>%
filter(Pitcher == pitcher) %>%
ggplot() +
coord_fixed() +
geom_rect(aes(xmin = 0.0175, xmax = 7, ymin = 0, ymax = 0.25), fill = "#76552B", color = "#76552B") +
geom_rect(aes(xmin = 0.0175, xmax = 4.5, ymin = 0.25, ymax = 0.65), fill = "#76552B", color = "#76552B") +
geom_rect(aes(xmin = 4.5, xmax = 6, ymin = 0.25, ymax = 0.45), fill = "#76552B", color = "#76552B") +
geom_curve(aes(x = 0, y = 0.75, xend = 7, yend = 0.2), size = 5, curvature = -0.05, color = "#76552B") +
geom_rect(aes(xmin = 0.70, xmax = 0.95, ymin = 0.845, ymax = 0.97), fill = "white", color = "black") +
geom_point(aes(x = Extension, y = RelHeight, color = TaggedPitchType),
size = 2, alpha = 0.75, shape = 1, show.legend = FALSE) +
scale_color_trackman() +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
axis.title.y = element_blank(),
axis.title.x = element_blank()) +
labs(color = "Pitch Type")
data %>%
filter(Pitcher == pitcher) %>%
filter(PitchCall %in%
c("StrikeSwinging", "InPlay",
"FoulBall", "FoulBallNotFieldable", "FoulBallFieldable")) %>%
mutate(SwingResult = case_when(PitchCall == "StrikeSwinging" ~ "Swing & Miss",
PitchCall  %in%  c("FoulBall", "FoulBallNotFieldable",
"FoulBallFieldable") ~ "Foul",
PitchCall == "InPlay" & ExitSpeed >= 95 ~ "Hard Hit",
PitchCall == "InPlay" & ExitSpeed < 95 ~ "Non-Hard Hit")) %>%
filter(!is.na(SwingResult)) %>%
ggplot() +
geom_plate() +
geom_zone() +
geom_point(aes(x = PlateLocSide, y = PlateLocHeight, color = TaggedPitchType,
shape = SwingResult, size = SwingResult), alpha = 0.8) +
scale_color_trackman() +
scale_shape_manual(values = c("Swing & Miss" = 4, "Foul" = 8,
"Hard Hit" = 18, "Non-Hard Hit" = 16),
drop = TRUE) +
scale_size_manual(values = c("Swing & Miss" = 3, "Foul" = 2.5,
"Hard Hit" = 5, "Non-Hard Hit" = 4),
drop = TRUE) +
geom_segment(aes(x = PlateLocSide, xend = tunnel_horz,
y = PlateLocHeight, yend = tunnel_vert,
color = TaggedPitchType),
alpha = 0.4) +
xlim(-2, 2) + ylim(0, 5) + coord_fixed() +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
plot.caption = element_text(hjust = 0.5)) +
labs(caption = "Line = perceived movement vs. fastball",
shape = "Result",
color = "Pitch Type") +
guides(color = guide_legend(order = 1),
shape = guide_legend(override.aes = list(size = 5)),
size = FALSE)
max_abs_x <- max(abs(data$PlateLocSide))
max_abs_y <- max(abs(data$PlateLocHeight))
# Create symmetric limits for x and y axes
x_lim <- c(-max_abs_x, max_abs_x)
y_lim <- c(-max_abs_y, max_abs_y)
data %>%
filter(Pitcher == pitcher) %>%
ggplot(aes(x = HorzBreak, y = InducedVertBreak)) +
geom_vline(xintercept = 0, color = "black", size = 0.5) +
geom_hline(yintercept = 0, color = "black", size = 0.5) +
geom_point(aes(color = TaggedPitchType), size = 3, alpha = 0.65, show.legend = FALSE) +
geom_text(aes(label = PitchCount),
size = 1.75, family = "Courier",
color = "white", show.legend = FALSE) +
xlim(-max(abs(data$HorzBreak)), max(abs(data$HorzBreak))) +
ylim(-max(abs(data$InducedVertBreak)), max(abs(data$InducedVertBreak))) +
coord_fixed() +
scale_color_trackman() +
theme_classic() +
theme(axis.line = element_blank(),
plot.title = element_blank(),
plot.subtitle = element_text(hjust = 0.5)) +
labs(color = "Pitch Type",
x = "Horizontal Break",
y = "Induced Vertical Break") +
facet_wrap(~ TaggedPitchType,
ncol = 2)
data %>%
filter(Pitcher == pitcher) %>%
ggplot(aes(x = PlateLocSide, y = PlateLocHeight)) +
geom_plate() +
geom_zone() +
geom_point(aes(color = TaggedPitchType),
size = 5, alpha = 0.65) +
scale_color_trackman() +
geom_text(aes(label = PitchCount),
size = 2.5, family = "Courier",
color = "white", show.legend = FALSE) +
xlim(-2, 2) + ylim(0, 5) + coord_fixed() +
theme_bw() +
theme(axis.ticks = element_blank(),
panel.grid = element_blank(),
axis.title = element_blank(),
axis.text = element_blank(),
axis.line = element_blank(),
plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5)) +
labs(color = "Pitch Type")
View(data)
data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2" ~ "Even"),
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>% View
data %>%
mutate(count = paste0(Balls, "_", Strikes)) %>%
mutate(count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2" ~ "Even"),
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>% View
data %>%
mutate(count = paste0(Balls, "_", Strikes)) %>% View
data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>% View
data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>% View
data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>%
mutate(total = rowSums(.[-1, ])) %>% View
data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>%
mutate(total = rowSums(select(., -count_state))) %>% View
data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>%
mutate(total = rowSums(select(., -count_state), na.rm = TRUE)) %>% View
data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>%
mutate(total = rowSums(select(., -count_state), na.rm = TRUE)) %>%
replace_na(list(`0` = 0)) %>% View
data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>%
mutate(total = rowSums(select(., -count_state), na.rm = TRUE)) %>%
replace_na(0) %>% View
data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>%
mutate(total = rowSums(select(., -count_state), na.rm = TRUE))
data[is.na(data)] <- 0
count_data <- data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>%
mutate(total = rowSums(select(., -count_state), na.rm = TRUE))
count_data[is.na(count_data)] <- 0
View(count_data)
count_data <- data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>%
mutate(Total = rowSums(select(., -count_state), na.rm = TRUE))
count_data[is.na(count_data)] <- 0
View(count_data)
count_data <- data %>%
mutate(count = paste0(Balls, "_", Strikes),
count_state = case_when(count  == "0_0" ~ "0-0",
count %in% c("1_1", "2_2") ~ "Even",
count %in% c("0_1", "0_2", "1_2") ~ "Ahead",
count %in% c("1_0", "2_0", "3_0", "2_1", "3_1") ~ "Behind",
count == "3_2" ~ "Full")) %>%
filter(Pitcher == pitcher) %>%
group_by(TaggedPitchType, count_state) %>%
summarize(n = n()) %>%
pivot_wider(names_from = "TaggedPitchType",
values_from = "n") %>%
mutate(Total = rowSums(select(., -count_state), na.rm = TRUE)) %>%
rename(Count = count_state)
View(count_data)
View(data)
